{
  "swagger": "2.0",
  "info": {
    "title": "MCAmour API",
    "version": "v1"
  },
  "host": "api.arlekino.tv",
  "schemes": ["https"],
  "basePath": "/",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    }
  },
  "security": [
    {
      "Basic": []
    }
  ],
  "paths": {
    "/api/v1/actions/admin/groups": {
      "get": {
        "operationId": "api_v1_actions_admin_groups_list",
        "description": "Представление для выборки всех групп логов",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ActionGroup"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_actions_admin_groups_create",
        "description": "Представление для выборки всех групп логов",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActionGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ActionGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/actions/admin/groups/{id}/": {
      "get": {
        "operationId": "api_v1_actions_admin_groups_read",
        "description": "Представление для выборки данных о группе действий",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ActionGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_actions_admin_groups_update",
        "description": "Представление для выборки данных о группе действий",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActionGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ActionGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_actions_admin_groups_partial_update",
        "description": "Представление для выборки данных о группе действий",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActionGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ActionGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_actions_admin_groups_delete",
        "description": "Представление для выборки данных о группе действий",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/actions/admin/logs/": {
      "get": {
        "operationId": "api_v1_actions_admin_logs_list",
        "description": "Представление для выборки всех логов",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LogsActions"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/actions/admin/logs/group/{groupId}": {
      "get": {
        "operationId": "api_v1_actions_admin_logs_group_read",
        "description": "Представление для выборки логов конкретной группы",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LogsActions"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/actions/admin/logs/type/{actionTypeId}": {
      "get": {
        "operationId": "api_v1_actions_admin_logs_type_read",
        "description": "Представление для выборки логов конкретного типа",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LogsActions"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "actionTypeId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/actions/admin/logs/type/{actionTypeId}/status/{actionStatusTypeId}": {
      "get": {
        "operationId": "api_v1_actions_admin_logs_type_status_read",
        "description": "Представление для выборки логов конкретного типа и статуса",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LogsActions"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "actionStatusTypeId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "actionTypeId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/actions/admin/logs/user/{userId}": {
      "get": {
        "operationId": "api_v1_actions_admin_logs_user_read",
        "description": "Представление для выборки логов конкретного пользователя",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LogsActions"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/actions/admin/types/": {
      "get": {
        "operationId": "api_v1_actions_admin_types_list",
        "description": "Представление для выборки всех типов действий",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ActionType"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/actions/admin/types/{id}/": {
      "get": {
        "operationId": "api_v1_actions_admin_types_read",
        "description": "Представление для выборки данных конкретного действия",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ActionType"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_actions_admin_types_update",
        "description": "Представление для выборки данных конкретного действия",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActionType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ActionType"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_actions_admin_types_partial_update",
        "description": "Представление для выборки данных конкретного действия",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActionType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ActionType"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/actions/user/groups/": {
      "get": {
        "operationId": "api_v1_actions_user_groups_list",
        "summary": "Получение списка групп логов",
        "description": "Список сообщений **message_type**:\n* **user_is_blocked**\nУчетная запись пользователя заблокирована.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ActionGroup"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/actions/user/logs/": {
      "get": {
        "operationId": "api_v1_actions_user_logs_list",
        "summary": "Получение всех логов активного пользователя",
        "description": "Список сообщений **message_type**:\n* **user_is_blocked**\nУчетная запись пользователя заблокирована.",
        "parameters": [
          {
            "name": "group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LogsActions"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/actions/user/logs/all/": {
      "get": {
        "operationId": "api_v1_actions_user_logs_all_list",
        "summary": "Получение всех логов активного пользователя без постраничной разбивки",
        "description": "Список сообщений **message_type**:\n* **user_is_blocked**\nУчетная запись пользователя заблокирована.",
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/actions/user/logs/group/{groupId}": {
      "get": {
        "operationId": "api_v1_actions_user_logs_group_read",
        "summary": "Получение логов указанной группы активного пользователя",
        "description": "Список сообщений **message_type**:\n* **user_is_blocked**\nУчетная запись пользователя заблокирована.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LogsActions"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/auth/account-confirm-email/": {
      "post": {
        "operationId": "api_v1_auth_account-confirm-email_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyEmail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VerifyEmail"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/confirm/resend/": {
      "post": {
        "operationId": "api_v1_auth_confirm_resend_create",
        "summary": "Повторная отправка информации для подтверждения e-mail адреса",
        "description": "Список сообщений **message_type**:\n* **user_already_verified**\nУчетная запись пользователя уже подтверждена.\n* **confirmation_resend_timeout**\nНе истек таймаут повторной отправки информации для подтверждения e-mail адреса.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailConfirmation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailConfirmation"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/confirm/sign-up-complete/{key}/": {
      "get": {
        "operationId": "api_v1_auth_confirm_sign-up-complete_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/auth/facebook/": {
      "post": {
        "operationId": "api_v1_auth_facebook_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SocialLogin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SocialLogin"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/google/": {
      "post": {
        "operationId": "api_v1_auth_google_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SocialLogin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SocialLogin"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/password/change/{uidb64}/{token}/": {
      "post": {
        "operationId": "api_v1_auth_password_change_create",
        "summary": "Изменение пароля пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MyPasswordResetConfirm"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MyPasswordResetConfirm"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "token",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "uidb64",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/auth/password/reset/": {
      "post": {
        "operationId": "api_v1_auth_password_reset_create",
        "summary": "Сброс пароля пользователя",
        "description": "Список сообщений **message_type**:\n* **email_already_sent**\nСообщение уже отправлено на указанный e-mail адрес. Попробуйте через одну минуту.\n* **user_with_this_email_not_registered**\nУчетная запись пользователя с указанным e-mail адресом не зарегистрирована.\n* **user_inactive**\nУчетная запись пользователя не активна.\n* **user_is_not_verified**\nУчетная запись пользователя не подтверждена.\n* **user_is_blocked**\nУчетная запись пользователя заблокирована.\n* **captcha_token_not_valid**\nНе удалось распознать капчу.\n* **user_is_deleted**\nУчетная запись пользователя удалена.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MyPasswordReset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MyPasswordReset"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/sign-in/": {
      "post": {
        "operationId": "api_v1_auth_sign-in_create",
        "summary": "Вход пользователя",
        "description": "Список сообщений **message_type**:\n* **auth_error**\nНеверный пароль или адрес электронной почты.\n* **user_inactive**\nУчетная запись пользователя не активна.\n* **user_is_not_verified**\nУчетная запись пользователя не подтверждена.\n* **user_is_blocked**\nУчетная запись пользователя заблокирована.\n* **captcha_token_not_valid**\nНе удалось распознать капчу.\n* **user_is_deleted**\nУчетная запись пользователя удалена.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignIn"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SignIn"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/sign-out/": {
      "post": {
        "operationId": "api_v1_auth_sign-out_create",
        "summary": "Выход пользователя",
        "description": "Список сообщений **message_type**:\n* **user_is_not_authenticated**\nПользователь не авторизован.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/sign-up/": {
      "post": {
        "operationId": "api_v1_auth_sign-up_create",
        "summary": "Регистрация нового пользователя",
        "description": "Список сообщений **message_type**:\n* **user_name_already_exists**\nПользователь с таким именем уже зарегистрирован.\n* **user_email_already_exists**\nПользователь с таким e-mail адресом уже зарегистрирован.\n* **password_too_common**\nВведённый пароль слишком широко распространён.\n* **password_too_short**\nВведённый пароль слишком короткий. Он должен содержать как минимум 6 символов.\n* **password_entirely_numeric**\nВведённый пароль состоит только из цифр.\n* **user_referral_token_invalid**\nНеверный формат реферального кода.\n* **user_not_found_by_referral_token**\nПользователь не обнаружен по указанному реферальному коду.\n* **user_found_by_referral_token_is_blocked**\nПользователь с указанным реферальным кодом заблокирован.\n* **db_template_language_not_found**\nЯзык шаблонов с указанным кодом не обнаружен.\n* **captcha_token_not_valid**\nНе удалось распознать капчу.\n* **fingerprint_registration_not_permit**\nЗапрещена регистрация пользователя.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/token/refresh/": {
      "post": {
        "operationId": "api_v1_auth_token_refresh_create",
        "summary": "Продление срока действия токена",
        "description": ".",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/validate/email/": {
      "post": {
        "operationId": "api_v1_auth_validate_email_create",
        "summary": "Проверка адреса e-mail",
        "description": "Список сообщений **message_type**:\n* **user_already_exists**\nПользователь с таким e-mail адресом уже зарегистрирован.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateEmail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateEmail"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/validate/password-change-token/": {
      "post": {
        "operationId": "api_v1_auth_validate_password-change-token_create",
        "summary": "Проверка токена подтверждения сброса пароля",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidatePasswordChangeToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidatePasswordChangeToken"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/auth/validate/referral-token/": {
      "post": {
        "operationId": "api_v1_auth_validate_referral-token_create",
        "summary": "Проверка реферального кода",
        "description": "Список сообщений **message_type**:\n* **user_referral_token_invalid**\nНеверный формат реферального кода.\n* **user_not_found_by_referral_token**\nПользователь не обнаружен по указанному реферальному коду.\n* **user_found_by_referral_token_is_blocked**\nПользователь с указанным реферальным кодом заблокирован.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateReferralToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateReferralToken"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/billing/admin/payment/system/create/": {
      "post": {
        "operationId": "api_v1_billing_admin_payment_system_create_create",
        "summary": "Создание платежной системы",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentSystemDetail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentSystemDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/billing/admin/payment/system/list/": {
      "get": {
        "operationId": "api_v1_billing_admin_payment_system_list_list",
        "summary": "Список всех платежных систем",
        "description": ".",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PaymentSystem"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/billing/admin/payment/system/{id}/": {
      "get": {
        "operationId": "api_v1_billing_admin_payment_system_read",
        "summary": "Изменение и удаление платежной системы",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentSystemDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_billing_admin_payment_system_update",
        "summary": "Изменение и удаление платежной системы",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentSystemDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentSystemDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_billing_admin_payment_system_partial_update",
        "summary": "Изменение и удаление платежной системы",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentSystemDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentSystemDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Payment system.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/billing/admin/payment/system/{id}/disable/": {
      "post": {
        "operationId": "api_v1_billing_admin_payment_system_disable_create",
        "summary": "Отключить платежную систему.",
        "description": "Список сообщений **message_type**:\n* **payment_system_is_disabled**\nФлаг активности для платежной системы с указанным ID {} уже снят.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Payment system.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/billing/admin/payment/system/{id}/enable/": {
      "post": {
        "operationId": "api_v1_billing_admin_payment_system_enable_create",
        "summary": "Включить платежную систему.",
        "description": "Список сообщений **message_type**:\n* **payment_system_is_enabled**\nФлаг активности для платежной системы с указанным ID {} уже установлен.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Payment system.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/billing/admin/payment/system/{id}/hide/": {
      "post": {
        "operationId": "api_v1_billing_admin_payment_system_hide_create",
        "summary": "Скрыть платежную систему.",
        "description": "При скрытии все пользователи, зарегистрированные после даты скрытия, не смогут использовать эту ПС.\n\nСписок сообщений **message_type**:\n* **payment_system_is_hidden**\nФлаг скрытия для платежной системы с указанным ID {} уже установлен.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Payment system.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/billing/admin/payment/system/{id}/show/": {
      "post": {
        "operationId": "api_v1_billing_admin_payment_system_show_create",
        "summary": "Показать платежную систему.",
        "description": "Список сообщений **message_type**:\n* **payment_system_is_not_hidden**\nФлаг скрытия для платежной системы с указанным ID {} уже снят.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Payment system.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/billing/admin/payment/transaction/aggregate/": {
      "get": {
        "operationId": "api_v1_billing_admin_payment_transaction_aggregate_list",
        "summary": "Агрегированный список платежных транзакций",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/billing/admin/payment/transaction/create/": {
      "post": {
        "operationId": "api_v1_billing_admin_payment_transaction_create_create",
        "summary": "Создание платежной транзакции пополнения баланса для пользователя",
        "description": "Список сообщений **message_type**:\n* **user_not_found_by_id**\nПользователь с указанным ID {} не обнаружен.\n* **amount_must_be_positive**\nСумма должна быть больше нуля.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentTransactionAdminReplenishment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentTransactionAdminReplenishment"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/billing/admin/payment/transaction/list/": {
      "get": {
        "operationId": "api_v1_billing_admin_payment_transaction_list_list",
        "summary": "Список всех платежных транзакций",
        "description": ".",
        "parameters": [
          {
            "name": "transaction_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PaymentTransaction"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/billing/admin/payment/transaction/{id}/": {
      "get": {
        "operationId": "api_v1_billing_admin_payment_transaction_read",
        "summary": "Просмотр данных платежной транзакции",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentTransaction"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this payment transaction.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/billing/payment/system/list/": {
      "get": {
        "operationId": "api_v1_billing_payment_system_list_list",
        "summary": "Список всех платежных систем",
        "description": ".",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PaymentSystem"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/billing/payment/system/{id}/": {
      "get": {
        "operationId": "api_v1_billing_payment_system_read",
        "summary": "Просмотр данных платежной системы",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentSystem"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Payment system.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/billing/payment/transaction/create/": {
      "post": {
        "operationId": "api_v1_billing_payment_transaction_create_create",
        "summary": "Создание платежной транзакции пополнения баланса",
        "description": "Список сообщений **message_type**:\n* **policy_agreement_must_be_set**\nНеобходимо подтвердить соглашение о политике конфиденциальности.\n* **amount_must_be_positive**\nСумма должна быть больше нуля.\n* **payment_system_not_found_by_id**\nПлатежная система с указанным ID {} не обнаружена.\n* **user_balance_replenishment_is_disable**\nПополнение баланса запрещено администратором.\n* **payment_system_is_disabled**\nПлатежная система с указанным ID {} отключена администратором.\n* **payment_system_is_disabled_for_user**\nПлатежная система с указанным ID {} отключена для пользователя администратором.\n* **user_is_blocked**\nУчетная запись пользователя заблокирована.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentTransactionReplenishment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentTransactionReplenishment"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/billing/payment/transaction/list/": {
      "get": {
        "operationId": "api_v1_billing_payment_transaction_list_list",
        "summary": "Список всех платежных транзакций текущего пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "transaction_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PaymentTransaction"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/billing/payment/transaction/{id}/": {
      "get": {
        "operationId": "api_v1_billing_payment_transaction_read",
        "summary": "Просмотр данных платежной транзакции",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentTransaction"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/billing/payment/transaction/{payment_system_id}/confirm/": {
      "get": {
        "operationId": "api_v1_billing_payment_transaction_confirm_list",
        "summary": "Подтверждение успешной оплаты платежной транзакции в платежной системе",
        "description": "Список сообщений **message_type**:\n* **payment_system_not_found_by_id**\nПлатежная система с указанным ID {} не обнаружена.\n* **payment_system_settings_class_not_found**\nКласс параметров для платежной системы с указанным ID {} не обнаружен.\n* **payment_system_invalid_settings_format**\nНеверный формат поля settings у платежной системы с указанным ID {}.\n* **payment_transaction_not_found_by_id**\nПлатежная транзакция с указанным ID {} не обнаружена.\n* **payment_transaction_created_for_another_payment_system**\nПлатежная транзакция с указанным ID {} создана для другой платежной системы.\n* **payment_transaction_confirmation_invalid_signature**\nНеверная подпись в данных запроса подтверждения оплаты платежной транзакции.\n* **payment_transaction_confirmation_invalid_merchant_id**\nНеверный ID магазина в данных запроса подтверждения оплаты платежной транзакции.\n* **payment_transaction_confirmation_invalid_amount**\nНеверная сумма платежа в данных запроса подтверждения оплаты платежной транзакции.\n* **payment_transaction_confirmation_invalid_email**\nНеверный email пользователя в данных запроса подтверждения оплаты платежной транзакции.\n* **payment_transaction_created_by_another_user**\nПлатежная транзакция с указанным ID {} создана другим пользователем.\n* **payment_transaction_already_confirmed**\nПлатежная транзакция с указанным ID {} уже подтверждена.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "payment_system_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/db_templates/admin/email-templates/": {
      "get": {
        "operationId": "api_v1_db_templates_admin_email-templates_list",
        "summary": "Список шаблонов email, создание нового шаблона",
        "description": ".",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_db_templates_admin_email-templates_create",
        "summary": "Список шаблонов email, создание нового шаблона",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplateCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplateCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/db_templates/admin/email-templates/images/": {
      "post": {
        "operationId": "api_v1_db_templates_admin_email-templates_images_create",
        "summary": "Загрузка, удаление изображения для содержимого шаблона email",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplateContentImage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplateContentImage"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/db_templates/admin/email-templates/images/{id}/": {
      "delete": {
        "operationId": "api_v1_db_templates_admin_email-templates_images_delete",
        "summary": "Загрузка, удаление изображения для содержимого шаблона email",
        "description": ".",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this email template content image.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/db_templates/admin/email-templates/{id}/": {
      "get": {
        "operationId": "api_v1_db_templates_admin_email-templates_read",
        "summary": "Просмотр, изменение, удаление шаблона",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplateDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_db_templates_admin_email-templates_update",
        "summary": "Просмотр, изменение, удаление шаблона",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplateUpdate"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_db_templates_admin_email-templates_partial_update",
        "summary": "Просмотр, изменение, удаление шаблона",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplateUpdate"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_db_templates_admin_email-templates_delete",
        "summary": "Просмотр, изменение, удаление шаблона",
        "description": ".",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this email template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/db_templates/admin/languages/": {
      "get": {
        "operationId": "api_v1_db_templates_admin_languages_list",
        "summary": "Список языков для шаблонов",
        "description": ".",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Language"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/db_templates/admin/template-contents/{id}/": {
      "get": {
        "operationId": "api_v1_db_templates_admin_template-contents_read",
        "summary": "Просмотр, изменение содержимого шаблона",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TemplateContent"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_db_templates_admin_template-contents_update",
        "summary": "Просмотр, изменение содержимого шаблона",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TemplateContent"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_db_templates_admin_template-contents_partial_update",
        "summary": "Просмотр, изменение содержимого шаблона",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TemplateContent"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this template content.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/db_templates/admin/templates/": {
      "get": {
        "operationId": "api_v1_db_templates_admin_templates_list",
        "summary": "Список шаблонов",
        "description": ".",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Template"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/db_templates/admin/templates/images/": {
      "post": {
        "operationId": "api_v1_db_templates_admin_templates_images_create",
        "summary": "Загрузка, удаление изображения для содержимого шаблона",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateContentImage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TemplateContentImage"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/db_templates/admin/templates/images/{id}/": {
      "delete": {
        "operationId": "api_v1_db_templates_admin_templates_images_delete",
        "summary": "Загрузка, удаление изображения для содержимого шаблона",
        "description": ".",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this template content image.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/db_templates/admin/templates/test-sending-email/": {
      "post": {
        "operationId": "api_v1_db_templates_admin_templates_test-sending-email_create",
        "summary": "Тест отправки содержимого шаблона на e-mail",
        "description": "Список сообщений **message_type**:\n* **html_content_or_text_content_must_be_specified**\nЗначение для html_content или text_content должно быть указано.\n* **email_template_not_found**\nШаблон e-mail с указанным ID {} не обнаружен.\n* **db_template_language_not_found**\nЯзык шаблонов с указанным ID {} не обнаружен.\n* **email_template_content_not_found**\nСодержимое шаблона e-mail с указанным ID {} для языка шаблонов с указанным ID {} не обнаружено.\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateContentTestSendingEmail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TemplateContentTestSendingEmail"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/db_templates/admin/templates/{id}/": {
      "get": {
        "operationId": "api_v1_db_templates_admin_templates_read",
        "summary": "Просмотр, изменение шаблона",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TemplateDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_db_templates_admin_templates_update",
        "summary": "Просмотр, изменение шаблона",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TemplateUpdate"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_db_templates_admin_templates_partial_update",
        "summary": "Просмотр, изменение шаблона",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TemplateUpdate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/db_templates/languages/": {
      "get": {
        "operationId": "api_v1_db_templates_languages_list",
        "summary": "Список языков для шаблонов",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Language"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/faq/admin/image/": {
      "post": {
        "operationId": "api_v1_faq_admin_image_create",
        "summary": "Создание и удаление фотографий для вопроса",
        "description": "FormData\nimage, faq (ID)\n\nСписок сообщений **message_type**:\n* **faq_or_tmp_faq_id_must_be_specified**\nЗначение для faq или tmp_faq_id должно быть указано.\n* **only_one_values_of_faq_or_tmp_faq_id_must_be_specified**\nТолько одно из значений faq или tmp_faq_id должно быть указано.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaqImage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FaqImage"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/faq/admin/image/{id}/": {
      "delete": {
        "operationId": "api_v1_faq_admin_image_delete",
        "summary": "Создание и удаление фотографий для вопроса",
        "description": "FormData\nimage, faq (ID)\n\nСписок сообщений **message_type**:\n* **faq_or_tmp_faq_id_must_be_specified**\nЗначение для faq или tmp_faq_id должно быть указано.\n* **only_one_values_of_faq_or_tmp_faq_id_must_be_specified**\nТолько одно из значений faq или tmp_faq_id должно быть указано.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/faq/admin/list/": {
      "get": {
        "operationId": "api_v1_faq_admin_list_list",
        "summary": "Список частых вопросов, создание нового вопроса.",
        "description": "Параметры запроса:\n?is_published=true/false - фильтр опубликованных вопросов\n?search= - Поиск по названию\n\nСписок сообщений **message_type**:\n* **list_of_answers_can_not_be_empty**\nСписок ответов не может быть пустым.\n* **order_should_be_a_positive_number**\nПоле order должно быть положительным числом.",
        "parameters": [
          {
            "name": "is_published",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FaqList"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_faq_admin_list_create",
        "summary": "Список частых вопросов, создание нового вопроса.",
        "description": "Параметры запроса:\n?is_published=true/false - фильтр опубликованных вопросов\n?search= - Поиск по названию\n\nСписок сообщений **message_type**:\n* **list_of_answers_can_not_be_empty**\nСписок ответов не может быть пустым.\n* **order_should_be_a_positive_number**\nПоле order должно быть положительным числом.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaqCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FaqCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/faq/admin/tags/": {
      "get": {
        "operationId": "api_v1_faq_admin_tags_list",
        "summary": "Список тегов.",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_faq_admin_tags_create",
        "summary": "Список тегов.",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/faq/admin/tags/{id}/": {
      "get": {
        "operationId": "api_v1_faq_admin_tags_read",
        "summary": "Просмотр, изменение, удаление тега.",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_faq_admin_tags_update",
        "summary": "Просмотр, изменение, удаление тега.",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_faq_admin_tags_partial_update",
        "summary": "Просмотр, изменение, удаление тега.",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_faq_admin_tags_delete",
        "summary": "Просмотр, изменение, удаление тега.",
        "description": ".",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this tag.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/faq/admin/{id}/": {
      "get": {
        "operationId": "api_v1_faq_admin_read",
        "summary": "Просмотр, изменение, удаление вопроса.",
        "description": "Список сообщений **message_type**:\n* **list_of_answers_can_not_be_empty**\nСписок ответов не может быть пустым.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FaqDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_faq_admin_update",
        "summary": "Просмотр, изменение, удаление вопроса.",
        "description": "Список сообщений **message_type**:\n* **list_of_answers_can_not_be_empty**\nСписок ответов не может быть пустым.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaqCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FaqCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_faq_admin_partial_update",
        "summary": "Просмотр, изменение, удаление вопроса.",
        "description": "Список сообщений **message_type**:\n* **list_of_answers_can_not_be_empty**\nСписок ответов не может быть пустым.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaqCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FaqCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_faq_admin_delete",
        "summary": "Просмотр, изменение, удаление вопроса.",
        "description": "Список сообщений **message_type**:\n* **list_of_answers_can_not_be_empty**\nСписок ответов не может быть пустым.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/faq/list/": {
      "get": {
        "operationId": "api_v1_faq_list_list",
        "summary": "Список вопросов.",
        "description": "Параметры запроса:\n?search= - Поиск по названию\n?tag={tag_id} - Поиск по ID тега\n?language={language_id} - Поиск по ID языка\n?ordering=[-]order|number_of_views - Сортировка по указанному полю, ordering=-order - в обратном порядке",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FaqList"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/faq/tags/": {
      "get": {
        "operationId": "api_v1_faq_tags_list",
        "summary": "Список тегов.",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/faq/{id}/": {
      "get": {
        "operationId": "api_v1_faq_read",
        "summary": "Просмотр вопроса.",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FaqDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/faq/{id}/view/": {
      "post": {
        "operationId": "api_v1_faq_view_create",
        "summary": "Увеличить счетчик просмотров.",
        "description": ".",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/helpdesk/cases/": {
      "get": {
        "operationId": "api_v1_helpdesk_cases_list",
        "summary": "Список обращений, создание нового обращения.",
        "description": "Список сообщений **message_type**:\n* **omnidesk_api_not_connect**\nOmnidesk API: ошибка подключения к серверу.\n* **omnidesk_api_bad_request**\nOmnidesk API: ошибка обработки запроса.\n* **user_not_found_by_id**\nПользователь с указанным ID {} не обнаружен.\n\nМетод создания нового обращения принимает данные в формате **multipart/form-data**.\n\nОперации выполняются в фоновой задаче, возвращается объект: **{'task_id': {task.id}, 'status': 'processed'}**.\nНеобходимо периодически повторять запрос с GET-параметром **task_id={task.id}**\nпока в результате параметр **status=processed**.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HelpDeskCase"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_helpdesk_cases_create",
        "summary": "Список обращений, создание нового обращения.",
        "description": "Список сообщений **message_type**:\n* **omnidesk_api_not_connect**\nOmnidesk API: ошибка подключения к серверу.\n* **omnidesk_api_bad_request**\nOmnidesk API: ошибка обработки запроса.\n* **user_not_found_by_id**\nПользователь с указанным ID {} не обнаружен.\n\nМетод создания нового обращения принимает данные в формате **multipart/form-data**.\n\nОперации выполняются в фоновой задаче, возвращается объект: **{'task_id': {task.id}, 'status': 'processed'}**.\nНеобходимо периодически повторять запрос с GET-параметром **task_id={task.id}**\nпока в результате параметр **status=processed**.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HelpDeskCaseCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HelpDeskCaseCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/helpdesk/cases/copyright-holder/": {
      "post": {
        "operationId": "api_v1_helpdesk_cases_copyright-holder_create",
        "summary": "Создание нового обращения правообладателем.",
        "description": "Список сообщений **message_type**:\n* **omnidesk_api_not_connect**\nOmnidesk API: ошибка подключения к серверу.\n* **omnidesk_api_bad_request**\nOmnidesk API: ошибка обработки запроса.\n\nОперации выполняются в фоновой задаче, возвращается объект: **{'task_id': {task.id}, 'status': 'processed'}**.\nНеобходимо периодически повторять запрос с GET-параметром **task_id={task.id}**\nпока в результате параметр **status=processed**.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HelpDeskCaseCopyrightHolderCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HelpDeskCaseCopyrightHolderCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/helpdesk/cases/faq/": {
      "post": {
        "operationId": "api_v1_helpdesk_cases_faq_create",
        "summary": "Создание нового обращения на основании вопроса.",
        "description": "Список сообщений **message_type**:\n* **omnidesk_api_not_connect**\nOmnidesk API: ошибка подключения к серверу.\n* **omnidesk_api_bad_request**\nOmnidesk API: ошибка обработки запроса.\n\nОперации выполняются в фоновой задаче, возвращается объект: **{'task_id': {task.id}, 'status': 'processed'}**.\nНеобходимо периодически повторять запрос с GET-параметром **task_id={task.id}**\nпока в результате параметр **status=processed**.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HelpDeskCaseCopyrightHolderCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HelpDeskCaseCopyrightHolderCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/helpdesk/cases/omnidesk-webhook/": {
      "post": {
        "operationId": "api_v1_helpdesk_cases_omnidesk-webhook_create",
        "summary": "Обработка события, полученного от Omnidesk.",
        "description": ".",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/helpdesk/cases/unread-message/": {
      "get": {
        "operationId": "api_v1_helpdesk_cases_unread-message_read",
        "summary": "Количество обращений с непрочитанными сообщениями.",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HelpDeskCaseUnreadMessage"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/helpdesk/cases/{case_id}/close/": {
      "post": {
        "operationId": "api_v1_helpdesk_cases_close_create",
        "summary": "Закрытие обращения.",
        "description": "Список сообщений **message_type**:\n* **omnidesk_api_not_connect**\nOmnidesk API: ошибка подключения к серверу.\n* **omnidesk_api_bad_request**\nOmnidesk API: ошибка обработки запроса.\n* **user_not_found_by_id**\nПользователь с указанным ID {} не обнаружен.\n* **user_is_not_creator_of_case**\nПользователь не является владельцем обращения с указанным ID {}.\n\nОперации выполняются в фоновой задаче, возвращается объект: **{'task_id': {task.id}, 'status': 'processed'}**.\nНеобходимо периодически повторять запрос с GET-параметром **task_id={task.id}**\nпока в результате параметр **status=processed**.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "case_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/helpdesk/cases/{case_id}/messages/": {
      "get": {
        "operationId": "api_v1_helpdesk_cases_messages_list",
        "summary": "Список сообщений конкретного обращения, создание нового сообщения.",
        "description": "Список сообщений **message_type**:\n* **omnidesk_api_not_connect**\nOmnidesk API: ошибка подключения к серверу.\n* **omnidesk_api_bad_request**\nOmnidesk API: ошибка обработки запроса.\n* **user_not_found_by_id**\nПользователь с указанным ID {} не обнаружен.\n* **user_is_not_creator_of_case**\nПользователь не является владельцем обращения с указанным ID {}.\n\nМетод создания нового сообщения принимает данные в формате multipart/form-data.\n\nОперации выполняются в фоновой задаче, возвращается объект: **{'task_id': {task.id}, 'status': 'processed'}**.\nНеобходимо периодически повторять запрос с GET-параметром **task_id={task.id}**\nпока в результате параметр **status=processed**.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HelpDeskCaseMessage"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_helpdesk_cases_messages_create",
        "summary": "Список сообщений конкретного обращения, создание нового сообщения.",
        "description": "Список сообщений **message_type**:\n* **omnidesk_api_not_connect**\nOmnidesk API: ошибка подключения к серверу.\n* **omnidesk_api_bad_request**\nOmnidesk API: ошибка обработки запроса.\n* **user_not_found_by_id**\nПользователь с указанным ID {} не обнаружен.\n* **user_is_not_creator_of_case**\nПользователь не является владельцем обращения с указанным ID {}.\n\nМетод создания нового сообщения принимает данные в формате multipart/form-data.\n\nОперации выполняются в фоновой задаче, возвращается объект: **{'task_id': {task.id}, 'status': 'processed'}**.\nНеобходимо периодически повторять запрос с GET-параметром **task_id={task.id}**\nпока в результате параметр **status=processed**.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HelpDeskCaseMessageCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HelpDeskCaseMessageCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "case_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/helpdesk/cases/{case_id}/reading/": {
      "post": {
        "operationId": "api_v1_helpdesk_cases_reading_create",
        "summary": "Установка флага прочтения сообщения для указанного обращения.",
        "description": "Список сообщений **message_type**:\n* **helpdesk_case_created_by_another_user**\nОбращение с указанным ID {} создано другим пользователем.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "case_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/admin/channel-group/list/": {
      "get": {
        "operationId": "api_v1_iptv_admin_channel-group_list_list",
        "description": "Список групп каналов, создание новой группы каналов",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminChannelGroup"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_iptv_admin_channel-group_list_create",
        "description": "Список групп каналов, создание новой группы каналов",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminChannelGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminChannelGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_iptv_admin_channel-group_list_delete",
        "description": "Удаление всех групп каналов",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/iptv/admin/channel-group/{id}/": {
      "get": {
        "operationId": "api_v1_iptv_admin_channel-group_read",
        "summary": "Просмотр/Изменение/Удаление группы каналов",
        "description": "Список сообщений **message_type**:\n* **remove_group_with_related_channels_is_impossible**\nУдалить группу со связанными каналами невозможно.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminChannelGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_iptv_admin_channel-group_update",
        "summary": "Просмотр/Изменение/Удаление группы каналов",
        "description": "Список сообщений **message_type**:\n* **remove_group_with_related_channels_is_impossible**\nУдалить группу со связанными каналами невозможно.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminChannelGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminChannelGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_iptv_admin_channel-group_partial_update",
        "summary": "Просмотр/Изменение/Удаление группы каналов",
        "description": "Список сообщений **message_type**:\n* **remove_group_with_related_channels_is_impossible**\nУдалить группу со связанными каналами невозможно.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminChannelGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminChannelGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_iptv_admin_channel-group_delete",
        "summary": "Просмотр/Изменение/Удаление группы каналов",
        "description": "Список сообщений **message_type**:\n* **remove_group_with_related_channels_is_impossible**\nУдалить группу со связанными каналами невозможно.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/admin/channel-group/{id}/drag-and-drop/": {
      "post": {
        "operationId": "api_v1_iptv_admin_channel-group_drag-and-drop_create",
        "description": "Изменение позиции группы каналов плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChannelGroupDragNDrop"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChannelGroupDragNDrop"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/admin/channel/list/": {
      "get": {
        "operationId": "api_v1_iptv_admin_channel_list_list",
        "description": "Апи представление для получение каналов по умолчанию из админки",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminChannel"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_iptv_admin_channel_list_create",
        "description": "Апи представление для получение каналов по умолчанию из админки",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCreateChannel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminCreateChannel"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_iptv_admin_channel_list_delete",
        "description": "Апи представление для получение каналов по умолчанию из админки",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/iptv/admin/channel/{id}/": {
      "get": {
        "operationId": "api_v1_iptv_admin_channel_read",
        "description": "Апи представление для RUD каналов по умолчанию из админки",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminChannel"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_iptv_admin_channel_update",
        "description": "Апи представление для RUD каналов по умолчанию из админки",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUpdateChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUpdateChannel"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_iptv_admin_channel_partial_update",
        "description": "Апи представление для RUD каналов по умолчанию из админки",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUpdateChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUpdateChannel"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_iptv_admin_channel_delete",
        "description": "Апи представление для RUD каналов по умолчанию из админки",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/admin/channel/{id}/drag-and-drop/": {
      "post": {
        "operationId": "api_v1_iptv_admin_channel_drag-and-drop_create",
        "description": "Апи представление для изменения порядкового номера канала по умолчанию",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChannelDragNDrop"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChannelDragNDrop"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/admin/export-channel/": {
      "get": {
        "operationId": "api_v1_iptv_admin_export-channel_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/iptv/admin/import-channel/get-data/": {
      "post": {
        "operationId": "api_v1_iptv_admin_import-channel_get-data_create",
        "summary": "Получение данных о группах каналов и каналах из CSV файла",
        "description": "Список сообщений **message_type**:\n* **download_csv_not_found_error**\nЗапрашиваемый URL не был найден на сервере.\n* **download_csv_connection_error**\nОшибка подключения при загрузке CSV файла: {error}.\n* **download_csv_http_error**\nОшибка HTTP при загрузке CSV файла: {error}.\n* **download_csv_unknown_error**\nНеизвестная ошибка при загрузке CSV файла: {error}.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/iptv/admin/import-channel/import/": {
      "post": {
        "operationId": "api_v1_iptv_admin_import-channel_import_create",
        "summary": "Импорт данных о группах каналов и каналах из CSV файла",
        "description": ".",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/iptv/admin/import-channel/validate/": {
      "post": {
        "operationId": "api_v1_iptv_admin_import-channel_validate_create",
        "summary": "Проверка данных о группах каналов и каналах из CSV файла",
        "description": ".",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/iptv/admin/playlist-types/": {
      "get": {
        "operationId": "api_v1_iptv_admin_playlist-types_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PlaylistType"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/iptv/playlist-os/": {
      "get": {
        "operationId": "api_v1_iptv_playlist-os_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PlaylistOS"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/iptv/playlist/channels/": {
      "get": {
        "operationId": "api_v1_iptv_playlist_channels_list",
        "description": "Просмотр всех каналов в плейлисте",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Channel"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/iptv/playlist/list/": {
      "get": {
        "operationId": "api_v1_iptv_playlist_list_list",
        "summary": "Просмотр всех плейлистов, создание нового плейлиста",
        "description": "Список сообщений **message_type**:\n* **playlist_title_already_exists**\nПлейлист с указанным именем уже существует.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Playlist"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_iptv_playlist_list_create",
        "summary": "Просмотр всех плейлистов, создание нового плейлиста",
        "description": "Список сообщений **message_type**:\n* **playlist_title_already_exists**\nПлейлист с указанным именем уже существует.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePlaylist"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatePlaylist"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/iptv/playlist/{id}/": {
      "get": {
        "operationId": "api_v1_iptv_playlist_read",
        "summary": "Просмотр, редактирование и удаление плейлиста",
        "description": "Список сообщений **message_type**:\n* **playlist_title_already_exists**\nПлейлист с указанным именем уже существует.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_iptv_playlist_update",
        "summary": "Просмотр, редактирование и удаление плейлиста",
        "description": "Список сообщений **message_type**:\n* **playlist_title_already_exists**\nПлейлист с указанным именем уже существует.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_iptv_playlist_partial_update",
        "summary": "Просмотр, редактирование и удаление плейлиста",
        "description": "Список сообщений **message_type**:\n* **playlist_title_already_exists**\nПлейлист с указанным именем уже существует.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_iptv_playlist_delete",
        "summary": "Просмотр, редактирование и удаление плейлиста",
        "description": "Список сообщений **message_type**:\n* **playlist_title_already_exists**\nПлейлист с указанным именем уже существует.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/playlist/{id}/bind_device/{device_pk}/": {
      "post": {
        "operationId": "api_v1_iptv_playlist_bind_device_create",
        "description": "Связывание плейлиста (pk) и устройства (device_pk)",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlaylistBindDevice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PlaylistBindDevice"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "device_pk",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/playlist/{playlist_pk}/groups/": {
      "get": {
        "operationId": "api_v1_iptv_playlist_groups_list",
        "description": "Просмотр всех групп каналов в плейлисте, создание новой группы каналов",
        "parameters": [
          {
            "name": "is_hidden",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ChannelGroup"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_iptv_playlist_groups_create",
        "description": "Просмотр всех групп каналов в плейлисте, создание новой группы каналов",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChannelGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChannelGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "playlist_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/playlist/{playlist_pk}/groups/hide/": {
      "put": {
        "operationId": "api_v1_iptv_playlist_groups_hide_update",
        "description": "Скрыть/Отобразить все группы каналов в плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_iptv_playlist_groups_hide_partial_update",
        "description": "Скрыть/Отобразить все группы каналов в плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "playlist_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/playlist/{playlist_pk}/groups/{group_pk}/channels/{id}/drag-and-drop/": {
      "post": {
        "operationId": "api_v1_iptv_playlist_groups_channels_drag-and-drop_create",
        "summary": "Изменение порядкового номера канала в группе каналов плейлиста",
        "description": "Список сообщений **message_type**:\n* **group_not_belong_to_playlist**\nГруппа каналов {group_name} не принадлежит плейлисту {playlist_title}.\n* **channel_not_belong_to_group**\nКанал {channel_name} не принадлежит группе каналов {group_name}.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlaylistGroupChannelDragNDrop"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PlaylistGroupChannelDragNDrop"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "group_pk",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "playlist_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/playlist/{playlist_pk}/groups/{group_pk}/channels/{id}/hide": {
      "put": {
        "operationId": "api_v1_iptv_playlist_groups_channels_hide_update",
        "description": "Скрыть/отобразить канал группы в плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideChannelOnPlaylistChannelGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HideChannelOnPlaylistChannelGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_iptv_playlist_groups_channels_hide_partial_update",
        "description": "Скрыть/отобразить канал группы в плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideChannelOnPlaylistChannelGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HideChannelOnPlaylistChannelGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "group_pk",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "playlist_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/playlist/{playlist_pk}/groups/{group_pk}/channels/{id}/move": {
      "put": {
        "operationId": "api_v1_iptv_playlist_groups_channels_move_update",
        "summary": "Переместить канал в другую группу каналов плейлиста",
        "description": "Список сообщений **message_type**:\n* **channel_not_moved_to_group_belongs_to_another_playlist**\nКанал {channel_name} не может быть перемещен в группу {group_name},\nпринадлежащую другому плейлисту {playlist_title}.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlaylistGroupChannelMove"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PlaylistGroupChannelMove"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_iptv_playlist_groups_channels_move_partial_update",
        "summary": "Переместить канал в другую группу каналов плейлиста",
        "description": "Список сообщений **message_type**:\n* **channel_not_moved_to_group_belongs_to_another_playlist**\nКанал {channel_name} не может быть перемещен в группу {group_name},\nпринадлежащую другому плейлисту {playlist_title}.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlaylistGroupChannelMove"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PlaylistGroupChannelMove"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "group_pk",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "playlist_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/playlist/{playlist_pk}/groups/{id}/": {
      "get": {
        "operationId": "api_v1_iptv_playlist_groups_read",
        "description": "Просмотр, редактирование и удаление группы каналов в плейлисте",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChannelGroupAndChannels"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_iptv_playlist_groups_update",
        "description": "Просмотр, редактирование и удаление группы каналов в плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChannelGroupUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChannelGroupUpdate"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_iptv_playlist_groups_partial_update",
        "description": "Просмотр, редактирование и удаление группы каналов в плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChannelGroupUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChannelGroupUpdate"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_iptv_playlist_groups_delete",
        "description": "Просмотр, редактирование и удаление группы каналов в плейлисте",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "playlist_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/playlist/{playlist_pk}/groups/{id}/channels/hide/": {
      "put": {
        "operationId": "api_v1_iptv_playlist_groups_channels_hide_update",
        "description": "Скрыть/Отобразить все каналы группы в плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_iptv_playlist_groups_channels_hide_partial_update",
        "description": "Скрыть/Отобразить все каналы группы в плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "playlist_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/playlist/{playlist_pk}/groups/{id}/drag-and-drop/": {
      "post": {
        "operationId": "api_v1_iptv_playlist_groups_drag-and-drop_create",
        "summary": "Изменение порядкового номера группы каналов в плейлисте",
        "description": "Список сообщений **message_type**:\n* **group_not_belong_to_playlist**\nГруппа каналов {group_name} не принадлежит плейлисту {playlist_title}.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlaylistDragNDropGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PlaylistDragNDropGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "playlist_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/iptv/playlist/{playlist_pk}/groups/{id}/hide/": {
      "put": {
        "operationId": "api_v1_iptv_playlist_groups_hide_update",
        "description": "Скрыть/Отобразить группу каналов в плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_iptv_playlist_groups_hide_partial_update",
        "description": "Скрыть/Отобразить группу каналов в плейлисте",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HideChannelGroupOnPlaylist"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "playlist_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/news/admin/image/": {
      "post": {
        "operationId": "api_v1_news_admin_image_create",
        "summary": "Создание и удаление фотографий для новости",
        "description": "FormData\nimage, news (ID)\n\nСписок сообщений **message_type**:\n* **news_or_tmp_news_id_must_be_specified**\nЗначение для news или tmp_news_id должно быть указано.\n* **only_one_values_of_news_or_tmp_news_id_must_be_specified**\nТолько одно из значений news или tmp_news_id должно быть указано.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewsImage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewsImage"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/news/admin/image/{id}/": {
      "delete": {
        "operationId": "api_v1_news_admin_image_delete",
        "summary": "Создание и удаление фотографий для новости",
        "description": "FormData\nimage, news (ID)\n\nСписок сообщений **message_type**:\n* **news_or_tmp_news_id_must_be_specified**\nЗначение для news или tmp_news_id должно быть указано.\n* **only_one_values_of_news_or_tmp_news_id_must_be_specified**\nТолько одно из значений news или tmp_news_id должно быть указано.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/news/admin/list/": {
      "get": {
        "operationId": "api_v1_news_admin_list_list",
        "summary": "Список новостей, создание новой новости.",
        "description": "Параметры запроса:\n?is_news_pages=true/false - фильтр новостей для страниц новостей\n?is_pushes=true/false - фильтр новостей для страниц уведомлений\n?order=-created_date/created_date - сортировка по дате\n?search= - Поиск по названию\n\nСписок сообщений **message_type**:\n* **list_of_countries_can_not_be_empty**\nСписок стран не может быть пустым.",
        "parameters": [
          {
            "name": "is_news_pages",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_pushes",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NewsList"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_news_admin_list_create",
        "summary": "Список новостей, создание новой новости.",
        "description": "Параметры запроса:\n?is_news_pages=true/false - фильтр новостей для страниц новостей\n?is_pushes=true/false - фильтр новостей для страниц уведомлений\n?order=-created_date/created_date - сортировка по дате\n?search= - Поиск по названию\n\nСписок сообщений **message_type**:\n* **list_of_countries_can_not_be_empty**\nСписок стран не может быть пустым.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewsCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewsCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/news/admin/{id}/": {
      "get": {
        "operationId": "api_v1_news_admin_read",
        "summary": "Просмотр, изменение, удаление новости.",
        "description": "Список сообщений **message_type**:\n* **list_of_countries_can_not_be_empty**\nСписок стран не может быть пустым.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewsDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_news_admin_update",
        "summary": "Просмотр, изменение, удаление новости.",
        "description": "Список сообщений **message_type**:\n* **list_of_countries_can_not_be_empty**\nСписок стран не может быть пустым.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewsDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewsDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_news_admin_partial_update",
        "summary": "Просмотр, изменение, удаление новости.",
        "description": "Список сообщений **message_type**:\n* **list_of_countries_can_not_be_empty**\nСписок стран не может быть пустым.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewsDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewsDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_news_admin_delete",
        "summary": "Просмотр, изменение, удаление новости.",
        "description": "Список сообщений **message_type**:\n* **list_of_countries_can_not_be_empty**\nСписок стран не может быть пустым.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/news/list/": {
      "get": {
        "operationId": "api_v1_news_list_list",
        "summary": "Список новостей.",
        "description": "Параметры запроса:\n?is_news_pages=true/false - фильтр новостей для страниц новостей\n?is_pushes=true/false - фильтр новостей для страниц уведомлений\n?order=-created_date/created_date - сортировка по дате\n?search= - Поиск по названию",
        "parameters": [
          {
            "name": "is_news_pages",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_pushes",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NewsList"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/news/{id}/": {
      "get": {
        "operationId": "api_v1_news_read",
        "summary": "Просмотр новости.",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewsDetail"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/orders/": {
      "post": {
        "operationId": "api_v1_orders_create",
        "summary": "Создание заявки на продление подписки для указанных устройств пользователя",
        "description": "Список сообщений **message_type**:\n* **not_user_device**\nУказаны ID устройств, не принадлежащих пользователю.\n* **not_exist_device**\nУказаны ID отсутствующих устройств.\n* **not_enough_money**\nНедостаточно средств на балансе, пополните баланс на сумму {amount} {currency}.\n* **device_subscription_extension_impossible**\nИзменение премиальной подписки возможно только по ее завершению. Обратитесь в службу поддержки.\n* **device_subscription_recalculation**\nБудет выполнен перерасчет стоимости остатка дней текущей подписки, премиальная подписка начнет действовать\nс момента продления.\n* **promocode_not_found**\nУказанный промокод {} не обнаружен.\n* **promocode_is_expired**\nСрок действия указанного промокода {} истек.\n* **promocode_is_not_active**\nУказанный промокод {} не активен.\n* **number_transactions_for_promocode_is_exhausted**\nКоличество транзакций для промокода {} исчерпано.\n* **promocode_transaction_not_found**\nТранзакция использования промокода с указанным ID {} не обнаружена.\n* **promocode_transaction_already_processed**\nТранзакция использования промокода с указанным ID {} уже обработана.\n* **promocode_transaction_created_by_another_user**\nТранзакция использования промокода с указанным ID {} создана другим пользователем.\n* **devices_subscription_date_alignment_days_amount_is_incorrect**\nДля режима выравнивания дат подписок количество дней должно быть равно 30.\n* **devices_subscription_date_alignment_device_ids_is_incorrect**\nДля режима выравнивания дат подписок необходимо указать ID нескольких устройств.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateOrder"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/permissions/admin/groups/": {
      "get": {
        "operationId": "api_v1_permissions_admin_groups_list",
        "summary": "Список групп пользователей, создание новой группы",
        "description": "Список сообщений **message_type**:\n* **admin_group_name_already_exists**\nГруппа пользователей с указанным именем {} уже существует, укажите другое имя.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminGroup"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_permissions_admin_groups_create",
        "summary": "Список групп пользователей, создание новой группы",
        "description": "Список сообщений **message_type**:\n* **admin_group_name_already_exists**\nГруппа пользователей с указанным именем {} уже существует, укажите другое имя.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminGroupCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminGroupCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/permissions/admin/groups/{group_id}/users/": {
      "get": {
        "operationId": "api_v1_permissions_admin_groups_users_list",
        "summary": "Список пользователей группы, добавление пользователя в группу",
        "description": ".",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminGroupUser"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_permissions_admin_groups_users_create",
        "summary": "Список пользователей группы, добавление пользователя в группу",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminGroupUserCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminGroupUserCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "group_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/permissions/admin/groups/{group_id}/users/{id}/": {
      "delete": {
        "operationId": "api_v1_permissions_admin_groups_users_delete",
        "summary": "Удаление пользователя из группы",
        "description": ".",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "group_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/permissions/admin/groups/{id}/": {
      "get": {
        "operationId": "api_v1_permissions_admin_groups_read",
        "summary": "Просмотр, изменение и удаление группы пользователей",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_permissions_admin_groups_update",
        "summary": "Просмотр, изменение и удаление группы пользователей",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_permissions_admin_groups_partial_update",
        "summary": "Просмотр, изменение и удаление группы пользователей",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminGroup"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_permissions_admin_groups_delete",
        "summary": "Просмотр, изменение и удаление группы пользователей",
        "description": ".",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this admin group.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/permissions/admin/menu-items/": {
      "get": {
        "operationId": "api_v1_permissions_admin_menu-items_list",
        "summary": "Список пунктов меню административной панели сайта",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdminMenuItem"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/admin/dns/list/": {
      "get": {
        "operationId": "api_v1_service_admin_dns_list_list",
        "summary": "Список DNS, создание нового DNS, удаление",
        "description": "Список сообщений **message_type**:\n* **dns_and_domain_already_exists**\nКомбинация имени и домена уже существует.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DNS"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_service_admin_dns_list_create",
        "summary": "Список DNS, создание нового DNS, удаление",
        "description": "Список сообщений **message_type**:\n* **dns_and_domain_already_exists**\nКомбинация имени и домена уже существует.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DNS"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DNS"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_service_admin_dns_list_delete",
        "summary": "Список DNS, создание нового DNS, удаление",
        "description": "Список сообщений **message_type**:\n* **dns_and_domain_already_exists**\nКомбинация имени и домена уже существует.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/admin/domain/list/": {
      "get": {
        "operationId": "api_v1_service_admin_domain_list_list",
        "description": "Список доменов, создание нового домена",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DomainResponse"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_service_admin_domain_list_create",
        "description": "Список доменов, создание нового домена",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainResponse"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DomainResponse"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/admin/domain/{id}/": {
      "get": {
        "operationId": "api_v1_service_admin_domain_read",
        "summary": "Просмотр, изменение, удаление домена",
        "description": "Список сообщений **message_type**:\n* **domain_not_found_by_id**\nДомен для замены указанным ID не обнаружен.\n* **replacement_domain_matches_domain_to_remove**\nДомен для замены совпадает с удаляемым доменом.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_service_admin_domain_update",
        "summary": "Просмотр, изменение, удаление домена",
        "description": "Список сообщений **message_type**:\n* **domain_not_found_by_id**\nДомен для замены указанным ID не обнаружен.\n* **replacement_domain_matches_domain_to_remove**\nДомен для замены совпадает с удаляемым доменом.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_service_admin_domain_partial_update",
        "summary": "Просмотр, изменение, удаление домена",
        "description": "Список сообщений **message_type**:\n* **domain_not_found_by_id**\nДомен для замены указанным ID не обнаружен.\n* **replacement_domain_matches_domain_to_remove**\nДомен для замены совпадает с удаляемым доменом.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_service_admin_domain_delete",
        "summary": "Просмотр, изменение, удаление домена",
        "description": "Список сообщений **message_type**:\n* **domain_not_found_by_id**\nДомен для замены указанным ID не обнаружен.\n* **replacement_domain_matches_domain_to_remove**\nДомен для замены совпадает с удаляемым доменом.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/service/admin/ministra/list/": {
      "get": {
        "operationId": "api_v1_service_admin_ministra_list_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MinistraServer"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_service_admin_ministra_list_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MinistraServer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MinistraServer"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/admin/ministra/{id}/": {
      "get": {
        "operationId": "api_v1_service_admin_ministra_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MinistraServer"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_service_admin_ministra_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MinistraServer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MinistraServer"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_service_admin_ministra_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MinistraServer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MinistraServer"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_service_admin_ministra_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this ministra server.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/service/admin/ministra/{id}/compare-channels/": {
      "post": {
        "operationId": "api_v1_service_admin_ministra_compare-channels_create",
        "summary": "Сравнение списка жанров и каналов сервера Ministra с группами и каналами плейлиста по умолчанию",
        "description": "Список сообщений **message_type**:\n* **ministra_server_not_found_by_id**\nСервер Ministra с указанным ID не обнаружен.\n* **ministra_server_custom_api_params_empty**\nДля сервера Ministra не указаны параметры подключения к Custom API.\n* **ministra_server_custom_api_url_is_incorrect**\nДля сервера Ministra неверно указан URL подключения к Custom API.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this ministra server.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/service/admin/ministra/{id}/force-epg-reload": {
      "post": {
        "operationId": "api_v1_service_admin_ministra_force-epg-reload_create",
        "summary": "Принудительное обновление EPG сервера Ministra",
        "description": "Список сообщений **message_type**:\n* **ministra_server_not_found_by_id**\nСервер Ministra с указанным ID {ID} не обнаружен.\n* **ministra_auth_failed**\nВозникла ошибка авторизации пользователя на портале Ministra.\n* **ministra_server_force_epg_reload_failed**\nВозникла ошибка принудительного обновления EPG на портале Ministra: {ошибка}.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/service/admin/ministra/{id}/update-channels/": {
      "post": {
        "operationId": "api_v1_service_admin_ministra_update-channels_create",
        "summary": "Обновление списка жанров и каналов сервера Ministra в соответствии с группами и каналами плейлиста по умолчанию",
        "description": "Список сообщений **message_type**:\n* **ministra_server_not_found_by_id**\nСервер Ministra с указанным ID не обнаружен.\n* **ministra_server_custom_api_params_empty**\nДля сервера Ministra не указаны параметры подключения к Custom API.\n* **ministra_server_custom_api_url_is_incorrect**\nДля сервера Ministra неверно указан URL подключения к Custom API.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this ministra server.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/service/admin/promocode/list/": {
      "get": {
        "operationId": "api_v1_service_admin_promocode_list_list",
        "summary": "Список промокодов, создание нового промокода.",
        "description": "Параметры фильтрации списка промокодов:\n- promocode_type - тип промокода, возможные значения amount/percent\n- is_active - активность промокода, возможные значения true/false\n- code - фраза для регистронезависимого поиска в поле code",
        "parameters": [
          {
            "name": "promocode_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Promocode"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_service_admin_promocode_list_create",
        "summary": "Список промокодов, создание нового промокода.",
        "description": "Параметры фильтрации списка промокодов:\n- promocode_type - тип промокода, возможные значения amount/percent\n- is_active - активность промокода, возможные значения true/false\n- code - фраза для регистронезависимого поиска в поле code",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromocodeCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromocodeCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/admin/promocode/{id}/": {
      "get": {
        "operationId": "api_v1_service_admin_promocode_read",
        "summary": "Просмотр данных промокода.",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Promocode"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_service_admin_promocode_delete",
        "summary": "Удаление промокода.",
        "description": "Список сообщений **message_type**:\n* **promocode_delete_is_impossible**\nОбнаружено {} транзакций применения данного промокода, удаление невозможно.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/service/admin/promocode/{id}/disable": {
      "post": {
        "operationId": "api_v1_service_admin_promocode_disable_create",
        "summary": "Отключение промокода",
        "description": "Список сообщений **message_type**:\n* **promocode_not_found**\nПромокод с указанным ID {} не обнаружен.\n* **promocode_is_not_active**\nУказанный промокод {} не активен.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/service/admin/promocode/{id}/enable": {
      "post": {
        "operationId": "api_v1_service_admin_promocode_enable_create",
        "summary": "Включение промокода",
        "description": "Список сообщений **message_type**:\n* **promocode_not_found**\nПромокод с указанным ID {} не обнаружен.\n* **promocode_is_active**\nУказанный промокод {} активен.\n* **promocode_is_expired**\nСрок действия указанного промокода {} истек.\n* **number_transactions_for_promocode_is_exhausted**\nКоличество транзакций для промокода {} исчерпано.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/service/admin/promocode/{id}/transactions": {
      "get": {
        "operationId": "api_v1_service_admin_promocode_transactions_list",
        "summary": "Список транзакций использования промокода",
        "description": ".",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PromocodeTransaction"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/service/admin/server/list/": {
      "get": {
        "operationId": "api_v1_service_admin_server_list_list",
        "summary": "Список серверов, создание нового сервера",
        "description": "Список сообщений **message_type**:\n* **virtual_server_already_exists**\nВиртуальный сервер уже существует.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Server"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_service_admin_server_list_create",
        "summary": "Список серверов, создание нового сервера",
        "description": "Список сообщений **message_type**:\n* **virtual_server_already_exists**\nВиртуальный сервер уже существует.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/admin/server/{id}/": {
      "get": {
        "operationId": "api_v1_service_admin_server_read",
        "summary": "Просмотр, изменение, удаление сервера",
        "description": "Список сообщений **message_type**:\n* **server_not_found_by_id**\nСервер для замены с указанным ID не обнаружен.\n* **replacement_server_matches_server_to_remove**\nСервер для замены совпадает с удаляемым сервером.\n* **virtual_server_already_exists**\nВиртуальный сервер уже существует.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_service_admin_server_update",
        "summary": "Просмотр, изменение, удаление сервера",
        "description": "Список сообщений **message_type**:\n* **server_not_found_by_id**\nСервер для замены с указанным ID не обнаружен.\n* **replacement_server_matches_server_to_remove**\nСервер для замены совпадает с удаляемым сервером.\n* **virtual_server_already_exists**\nВиртуальный сервер уже существует.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_service_admin_server_partial_update",
        "summary": "Просмотр, изменение, удаление сервера",
        "description": "Список сообщений **message_type**:\n* **server_not_found_by_id**\nСервер для замены с указанным ID не обнаружен.\n* **replacement_server_matches_server_to_remove**\nСервер для замены совпадает с удаляемым сервером.\n* **virtual_server_already_exists**\nВиртуальный сервер уже существует.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_service_admin_server_delete",
        "summary": "Просмотр, изменение, удаление сервера",
        "description": "Список сообщений **message_type**:\n* **server_not_found_by_id**\nСервер для замены с указанным ID не обнаружен.\n* **replacement_server_matches_server_to_remove**\nСервер для замены совпадает с удаляемым сервером.\n* **virtual_server_already_exists**\nВиртуальный сервер уже существует.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/service/dns/list/": {
      "get": {
        "operationId": "api_v1_service_dns_list_list",
        "summary": "Список ДНС, создание нового ДНС",
        "description": "Список сообщений **message_type**:\n* **dns_and_domain_already_exists**\nКомбинация имени и домена уже существует.\n* **dns_contains_russian_letters**\nИмя {} содержит русские буквы.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DNS"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_service_dns_list_create",
        "summary": "Список ДНС, создание нового ДНС",
        "description": "Список сообщений **message_type**:\n* **dns_and_domain_already_exists**\nКомбинация имени и домена уже существует.\n* **dns_contains_russian_letters**\nИмя {} содержит русские буквы.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DNS"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DNS"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/dns/{id}/": {
      "get": {
        "operationId": "api_v1_service_dns_read",
        "summary": "Просмотр, изменение, удаление ДНС",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DNS"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_service_dns_update",
        "summary": "Просмотр, изменение, удаление ДНС",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DNS"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DNS"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_service_dns_partial_update",
        "summary": "Просмотр, изменение, удаление ДНС",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DNS"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DNS"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_service_dns_delete",
        "summary": "Просмотр, изменение, удаление ДНС",
        "description": ".",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/service/domain/default/": {
      "get": {
        "operationId": "api_v1_service_domain_default_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/domain/list/": {
      "get": {
        "operationId": "api_v1_service_domain_list_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Domain"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/ministra/list/": {
      "get": {
        "operationId": "api_v1_service_ministra_list_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MinistraServer"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/promocode/apply": {
      "post": {
        "operationId": "api_v1_service_promocode_apply_create",
        "summary": "Применение промокода",
        "description": "Список сообщений **message_type**:\n* **promocode_not_found**\nПромокод с указанным ID {} не обнаружен.\n* **promocode_is_not_active**\nУказанный промокод {} не активен.\n* **promocode_is_expired**\nСрок действия указанного промокода {} истек.\n* **number_transactions_for_promocode_is_exhausted**\nКоличество транзакций для промокода {} исчерпано.\n* **promocode_cannot_be_applied_with_personal_discount**\nУказана персональная скидка, промокод не может быть применен.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromocodeApply"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromocodeApply"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/server/list/": {
      "get": {
        "operationId": "api_v1_service_server_list_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserServer"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/service/system-settings/": {
      "get": {
        "operationId": "api_v1_service_system-settings_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/statistics/finance": {
      "get": {
        "operationId": "api_v1_user_admin_statistics_finance_list",
        "summary": "Данные для секции \"ФИНАНСЫ\" раздела \"Статистика\"",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "t_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/statistics/money/balance-users": {
      "get": {
        "operationId": "api_v1_user_admin_statistics_money_balance-users_list",
        "summary": "Данные для показателя \"Баланс всех пользователей\" секции \"ДЕНЬГИ\" раздела \"Статистика\"",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/statistics/money/general": {
      "get": {
        "operationId": "api_v1_user_admin_statistics_money_general_list",
        "summary": "Общие данные для секции \"ДЕНЬГИ\" раздела \"Статистика\"",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/statistics/money/payment-transactions": {
      "get": {
        "operationId": "api_v1_user_admin_statistics_money_payment-transactions_list",
        "summary": "Данные для показателя \"Заработано за период\" секции \"ДЕНЬГИ\" раздела \"Статистика\"",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/statistics/users/all": {
      "get": {
        "operationId": "api_v1_user_admin_statistics_users_all_list",
        "summary": "Данные для показателя \"Всего пользователей\" секции \"ПОЛЬЗОВАТЕЛИ\" раздела \"Статистика\"",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/statistics/users/devices": {
      "get": {
        "operationId": "api_v1_user_admin_statistics_users_devices_list",
        "summary": "Данные для показателя \"Устройств с подпиской\" секции \"ПОЛЬЗОВАТЕЛИ\" раздела \"Статистика\"",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/statistics/users/general": {
      "get": {
        "operationId": "api_v1_user_admin_statistics_users_general_list",
        "summary": "Общие данные для секции \"ПОЛЬЗОВАТЕЛИ\" раздела \"Статистика\"",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/statistics/users/referral": {
      "get": {
        "operationId": "api_v1_user_admin_statistics_users_referral_list",
        "summary": "Данные для показателя \"По реф. ссылкам\" секции \"ПОЛЬЗОВАТЕЛИ\" раздела \"Статистика\"",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/user": {
      "get": {
        "operationId": "api_v1_user_admin_user_list",
        "summary": "Список пользователей",
        "description": ".",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminUserList"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/user/{id}": {
      "get": {
        "operationId": "api_v1_user_admin_user_read",
        "summary": "Просмотр и изменение информации о пользователе администратором",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUser"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_user_admin_user_partial_update",
        "summary": "Просмотр и изменение информации о пользователе администратором",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUpdateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUpdateUser"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/balance/": {
      "put": {
        "operationId": "api_v1_user_admin_user_balance_update",
        "summary": "Изменение баланса пользователя администратором",
        "description": "Список сообщений **message_type**:\n* **amount_must_be_positive_or_nul**\nСумма должна быть больше или равна нулю.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserBalanceChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserBalanceChange"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_user_admin_user_balance_partial_update",
        "summary": "Изменение баланса пользователя администратором",
        "description": "Список сообщений **message_type**:\n* **amount_must_be_positive_or_nul**\nСумма должна быть больше или равна нулю.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserBalanceChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserBalanceChange"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/block": {
      "get": {
        "operationId": "api_v1_user_admin_user_block_list",
        "summary": "Просмотр списка блокировок пользователя и создание новой.",
        "description": "Список сообщений **message_type**:\n* **user_actual_block_already_exists**\nАктуальная блокировка пользователя уже существует.\n* **user_block_start_date_is_less_today**\nУказанная дата начала блокировки пользователя {} меньше текущей даты.\n* **user_block_expires_is_less_or_equal_to_start_date**\nУказанная дата окончания блокировки пользователя {} меньше или равна дате начала {}.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminUserBlock"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_user_admin_user_block_create",
        "summary": "Просмотр списка блокировок пользователя и создание новой.",
        "description": "Список сообщений **message_type**:\n* **user_actual_block_already_exists**\nАктуальная блокировка пользователя уже существует.\n* **user_block_start_date_is_less_today**\nУказанная дата начала блокировки пользователя {} меньше текущей даты.\n* **user_block_expires_is_less_or_equal_to_start_date**\nУказанная дата окончания блокировки пользователя {} меньше или равна дате начала {}.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserBlock"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserBlock"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/block/actual": {
      "get": {
        "operationId": "api_v1_user_admin_user_block_actual_read",
        "summary": "Получение информации о блокировки пользователя.",
        "description": "* Если результат пустой - пользователь не заблокирован\n* Результат с описанием блокировки - пользователь заблокирован",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserBlock"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/block/{block_pk}": {
      "get": {
        "operationId": "api_v1_user_admin_user_block_read",
        "summary": "АПИ представление блокировки с указанием причины",
        "description": "Список сообщений **message_type**:\n* **user_actual_block_expires_equal_to_current**\nУказанная дата окончания актуальной блокировки пользователя {} совпадает с текущей {}.\n* **user_actual_block_expires_is_less_today**\nУказанная дата окончания актуальной блокировки пользователя {} меньше текущей даты.\n* **user_block_expires_is_less_or_equal_to_start_date**\nУказанная дата окончания блокировки пользователя {} меньше или равна дате начала {}.\n* **user_block_already_cancelled**\nБлокировка пользователя с указанным ID {} уже отменена, изменение невозможно.\n* **user_block_is_not_actual**\nУказанный ID блокировки пользователя {} не совпадает с ID актуальной блокировки {}.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserBlock"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_user_admin_user_block_update",
        "summary": "АПИ представление блокировки с указанием причины",
        "description": "Список сообщений **message_type**:\n* **user_actual_block_expires_equal_to_current**\nУказанная дата окончания актуальной блокировки пользователя {} совпадает с текущей {}.\n* **user_actual_block_expires_is_less_today**\nУказанная дата окончания актуальной блокировки пользователя {} меньше текущей даты.\n* **user_block_expires_is_less_or_equal_to_start_date**\nУказанная дата окончания блокировки пользователя {} меньше или равна дате начала {}.\n* **user_block_already_cancelled**\nБлокировка пользователя с указанным ID {} уже отменена, изменение невозможно.\n* **user_block_is_not_actual**\nУказанный ID блокировки пользователя {} не совпадает с ID актуальной блокировки {}.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserBlock"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserBlock"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_user_admin_user_block_partial_update",
        "summary": "АПИ представление блокировки с указанием причины",
        "description": "Список сообщений **message_type**:\n* **user_actual_block_expires_equal_to_current**\nУказанная дата окончания актуальной блокировки пользователя {} совпадает с текущей {}.\n* **user_actual_block_expires_is_less_today**\nУказанная дата окончания актуальной блокировки пользователя {} меньше текущей даты.\n* **user_block_expires_is_less_or_equal_to_start_date**\nУказанная дата окончания блокировки пользователя {} меньше или равна дате начала {}.\n* **user_block_already_cancelled**\nБлокировка пользователя с указанным ID {} уже отменена, изменение невозможно.\n* **user_block_is_not_actual**\nУказанный ID блокировки пользователя {} не совпадает с ID актуальной блокировки {}.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserBlock"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserBlock"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "block_pk",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/device": {
      "get": {
        "operationId": "api_v1_user_admin_user_device_list",
        "summary": "Список устройств пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminUserDevice"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/device/{deviceId}": {
      "get": {
        "operationId": "api_v1_user_admin_user_device_read",
        "summary": "Просмотр и изменение данных устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **ministra_server_not_found_by_id**\nСервер Ministra с указанным ID не обнаружен.\n* **device_portal_params_empty**\nНе указанны обязательные параметры портала.\n* **user_login_is_already_used**\nУказанный логин пользователя уже используется на сервере Ministra.\n* **could_not_connect_to_api_server**\nНе удалось соединиться с сервером промежуточного API.\n* **attempts_exhausted**\nИсчерпались попытки повторения операции на сервере промежуточного API.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserDevice"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_user_admin_user_device_update",
        "summary": "Просмотр и изменение данных устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **ministra_server_not_found_by_id**\nСервер Ministra с указанным ID не обнаружен.\n* **device_portal_params_empty**\nНе указанны обязательные параметры портала.\n* **user_login_is_already_used**\nУказанный логин пользователя уже используется на сервере Ministra.\n* **could_not_connect_to_api_server**\nНе удалось соединиться с сервером промежуточного API.\n* **attempts_exhausted**\nИсчерпались попытки повторения операции на сервере промежуточного API.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserDeviceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserDeviceUpdate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/device/{deviceId}/cancel-subscription/": {
      "post": {
        "operationId": "api_v1_user_admin_user_device_cancel-subscription_create",
        "summary": "Отмена подписки для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **device_not_have_active_subscription**\nУстройство не имеет активной подписки.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserDeviceSubscriptionCancel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserDeviceSubscriptionCancel"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/device/{deviceId}/change-subscription/": {
      "post": {
        "operationId": "api_v1_user_admin_user_device_change-subscription_create",
        "summary": "Изменение даты действия подписки для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **device_not_have_active_subscription**\nУстройство не имеет активной подписки.\n* **device_subscription_end_date_less_start_date**\nДата окончания подписки должна быть больше даты начала.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserDeviceSubscriptionChange"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserDeviceSubscriptionChange"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/device/{deviceId}/clear-ministra-user-theme/": {
      "post": {
        "operationId": "api_v1_user_admin_user_device_clear-ministra-user-theme_create",
        "summary": "Сброс темы пользователя Ministra для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **ministra_server_not_found_by_id**\nСервер Ministra с указанным ID не обнаружен.\n* **device_portal_params_empty**\nНе указанны обязательные параметры портала.\n* **user_login_is_already_used**\nУказанный логин пользователя уже используется на сервере Ministra.\n* **could_not_connect_to_api_server**\nНе удалось соединиться с сервером промежуточного API.\n* **attempts_exhausted**\nИсчерпались попытки повторения операции на сервере промежуточного API.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/device/{deviceId}/create-subscription/": {
      "post": {
        "operationId": "api_v1_user_admin_user_device_create-subscription_create",
        "summary": "Создание подписки для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **device_has_an_active_subscription**\nУстройство имеет активную подписку.\n* **device_subscription_end_date_less_start_date**\nДата окончания подписки должна быть больше даты начала.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserDeviceAddSubscription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserDeviceAddSubscription"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/device/{deviceId}/logs/": {
      "get": {
        "operationId": "api_v1_user_admin_user_device_logs_list",
        "summary": "Список логов для устройства пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/device/{deviceId}/refresh-ott-id/": {
      "post": {
        "operationId": "api_v1_user_admin_user_device_refresh-ott-id_create",
        "summary": "Изменение OttId для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **device_ott_id_not_found**\nУказанное значение OttId {] не обнаружено.\n* **device_refresh_ott_id_attempts_count_is_exhausted**\nИсчерпано количество попыток ({}) изменения OttId в сутки, следующая попытка возможна после {}.\n* **device_refresh_ott_id_attempts_interval_not_expired**\nИнтервал между попытками ({}) изменения OttId еще не истек, следующая попытка возможна после {}.\n* **device_refresh_ott_id_active_subscription_not_found**\nОтсутствует активная подписка для устройства.\n* **device_refresh_ott_id_view_type_not_equal_playlist**\nТип просмотра устройства не равен playlist.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/playlists": {
      "get": {
        "operationId": "api_v1_user_admin_user_playlists_list",
        "summary": "Список плейлистов пользователей",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Playlist"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/raw-password/": {
      "post": {
        "operationId": "api_v1_user_admin_user_raw-password_create",
        "summary": "Получение пароля пользователя администратором",
        "description": "Список сообщений **message_type**:\n* **user_raw_password_is_empty**\nНе удалось получить пароль пользователя.\n* **raw_password_decode_pin_invalid**\nНеверно указан пин-код для декодирования пароля пользователя, попытка {} из {}.\n* **raw_password_decode_pin_attempts_count_is_exhausted**\nИсчерпано количество повторных попыток ввода пин-код ({} из {}) для декодирования пароля пользователя в сутки.\nВремя блокировки истекает в {}.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserRawPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserRawPassword"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/referrals": {
      "get": {
        "operationId": "api_v1_user_admin_user_referrals_list",
        "summary": "Список рефералов пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Referral"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/referrals/balance": {
      "get": {
        "operationId": "api_v1_user_admin_user_referrals_balance_read",
        "summary": "Баланс внутреннего счета пользователя",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReferralStatistics"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/referrals/balance/withdrawal-transactions": {
      "get": {
        "operationId": "api_v1_user_admin_user_referrals_balance_withdrawal-transactions_list",
        "summary": "Список транзакций вывода средств пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WithdrawalTransaction"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/referrals/link-click-throughs": {
      "get": {
        "operationId": "api_v1_user_admin_user_referrals_link-click-throughs_list",
        "summary": "Список переходов по реферальной ссылке пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReferralLinkClickThrough"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/referrals/transactions": {
      "get": {
        "operationId": "api_v1_user_admin_user_referrals_transactions_list",
        "summary": "Список реферальных транзакций пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReferralTransaction"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/admin/user/{id}/send-email": {
      "post": {
        "operationId": "api_v1_user_admin_user_send-email_create",
        "summary": "Отправить сообщение на e-mail пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminUserSendEmail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserSendEmail"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Users.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/user/admin/withdrawal/systems": {
      "get": {
        "operationId": "api_v1_user_admin_withdrawal_systems_list",
        "summary": "Список систем для вывода средств, создание новой системы для вывода средств",
        "description": ".",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WithdrawalSystem"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_user_admin_withdrawal_systems_create",
        "summary": "Список систем для вывода средств, создание новой системы для вывода средств",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalSystem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalSystem"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/withdrawal/systems/{id}": {
      "get": {
        "operationId": "api_v1_user_admin_withdrawal_systems_read",
        "summary": "Просмотр, изменение и удаление системы для вывода средств",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalSystem"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_user_admin_withdrawal_systems_update",
        "summary": "Просмотр, изменение и удаление системы для вывода средств",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalSystem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalSystem"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_user_admin_withdrawal_systems_partial_update",
        "summary": "Просмотр, изменение и удаление системы для вывода средств",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalSystem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalSystem"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_user_admin_withdrawal_systems_delete",
        "summary": "Просмотр, изменение и удаление системы для вывода средств",
        "description": ".",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Withdrawal system.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/user/admin/withdrawal/transactions": {
      "get": {
        "operationId": "api_v1_user_admin_withdrawal_transactions_list",
        "summary": "Список транзакций вывода средств пользователей",
        "description": ".",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "withdrawal_system",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WithdrawalTransaction"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/admin/withdrawal/transactions/{id}": {
      "get": {
        "operationId": "api_v1_user_admin_withdrawal_transactions_read",
        "summary": "Просмотр данных транзакции вывода средств пользователя",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalTransaction"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this withdrawal transaction.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/user/admin/withdrawal/transactions/{id}/approve": {
      "post": {
        "operationId": "api_v1_user_admin_withdrawal_transactions_approve_create",
        "summary": "Утверждение транзакции вывода средств пользователя",
        "description": "Список сообщений **message_type**:\n* **withdrawal_transaction_is_transfered**\nТранзакция вывода средств уже обработана.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionApprove"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionApprove"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this withdrawal transaction.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/user/admin/withdrawal/transactions/{id}/reject": {
      "post": {
        "operationId": "api_v1_user_admin_withdrawal_transactions_reject_create",
        "summary": "Отклонение транзакции вывода средств пользователя",
        "description": "Список сообщений **message_type**:\n* **withdrawal_transaction_is_transfered**\nТранзакция вывода средств уже обработана.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionReject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionReject"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this withdrawal transaction.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/v1/user/block/": {
      "get": {
        "operationId": "api_v1_user_block_read",
        "description": "Апи представление для получения информации о нынешней блокировки активного пользователя",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserBlock"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/block/list": {
      "get": {
        "operationId": "api_v1_user_block_list_list",
        "description": "Апи представление выборки записей о блокировках активного пользователя",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserBlock"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/countries/": {
      "get": {
        "operationId": "api_v1_user_countries_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/device/check_all/": {
      "put": {
        "operationId": "api_v1_user_device_check_all_update",
        "summary": "Изменение флага выбора всех устройств пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAllDevices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckAllDevices"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_user_device_check_all_partial_update",
        "summary": "Изменение флага выбора всех устройств пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAllDevices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckAllDevices"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/device/list/": {
      "get": {
        "operationId": "api_v1_user_device_list_list",
        "summary": "Список устройств, создание нового устройства",
        "description": "Список сообщений **message_type**:\n* **device_name_already_exists**\nУстройство с указанным именем уже существует, укажите другое имя.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscription_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "server_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "selected",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Device"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_user_device_list_create",
        "summary": "Список устройств, создание нового устройства",
        "description": "Список сообщений **message_type**:\n* **device_name_already_exists**\nУстройство с указанным именем уже существует, укажите другое имя.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDevice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateDevice"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/device/{id}/": {
      "get": {
        "operationId": "api_v1_user_device_read",
        "summary": "Просмотр, изменение и удаление устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **device_name_already_exists**\nУстройство с указанным именем уже существует, укажите другое имя.\n* **device_cannot_deleted_while_active_subscription**\nУстройство может быть удалено после окончания срока действия подписки {date_end}.\n* **hwid_cannot_be_changed_by_the_user**\nHWID не может быть изменен пользователем.\n* **hwid_must_be_deleted_together_with_the_pairing_code**\nHWID должно быть удалено вместе с кодом сопряжения.\n* **device_pairing_code_already_exists**\nУказанный код сопряжения уже используется для другого устройства, укажите другой код сопряжения.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_user_device_update",
        "summary": "Просмотр, изменение и удаление устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **device_name_already_exists**\nУстройство с указанным именем уже существует, укажите другое имя.\n* **device_cannot_deleted_while_active_subscription**\nУстройство может быть удалено после окончания срока действия подписки {date_end}.\n* **hwid_cannot_be_changed_by_the_user**\nHWID не может быть изменен пользователем.\n* **hwid_must_be_deleted_together_with_the_pairing_code**\nHWID должно быть удалено вместе с кодом сопряжения.\n* **device_pairing_code_already_exists**\nУказанный код сопряжения уже используется для другого устройства, укажите другой код сопряжения.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateDevice"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_user_device_partial_update",
        "summary": "Просмотр, изменение и удаление устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **device_name_already_exists**\nУстройство с указанным именем уже существует, укажите другое имя.\n* **device_cannot_deleted_while_active_subscription**\nУстройство может быть удалено после окончания срока действия подписки {date_end}.\n* **hwid_cannot_be_changed_by_the_user**\nHWID не может быть изменен пользователем.\n* **hwid_must_be_deleted_together_with_the_pairing_code**\nHWID должно быть удалено вместе с кодом сопряжения.\n* **device_pairing_code_already_exists**\nУказанный код сопряжения уже используется для другого устройства, укажите другой код сопряжения.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateDevice"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_user_device_delete",
        "summary": "Просмотр, изменение и удаление устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **device_name_already_exists**\nУстройство с указанным именем уже существует, укажите другое имя.\n* **device_cannot_deleted_while_active_subscription**\nУстройство может быть удалено после окончания срока действия подписки {date_end}.\n* **hwid_cannot_be_changed_by_the_user**\nHWID не может быть изменен пользователем.\n* **hwid_must_be_deleted_together_with_the_pairing_code**\nHWID должно быть удалено вместе с кодом сопряжения.\n* **device_pairing_code_already_exists**\nУказанный код сопряжения уже используется для другого устройства, укажите другой код сопряжения.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/device/{id}/checked/": {
      "post": {
        "operationId": "api_v1_user_device_checked_create",
        "summary": "Изменение флага выбора устройства пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCheck"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceCheck"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/device/{id}/clear_portal_user_theme/": {
      "post": {
        "operationId": "api_v1_user_device_clear_portal_user_theme_create",
        "summary": "Сброс темы пользователя Ministra для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **ministra_server_not_found_by_id**\nСервер Ministra с указанным ID не обнаружен.\n* **device_portal_params_empty**\nНе указанны обязательные параметры портала.\n* **user_login_is_already_used**\nУказанный логин пользователя уже используется на сервере Ministra.\n* **could_not_connect_to_api_server**\nНе удалось соединиться с сервером промежуточного API.\n* **attempts_exhausted**\nИсчерпались попытки повторения операции на сервере промежуточного API.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/device/{id}/dns/": {
      "get": {
        "operationId": "api_v1_user_device_dns_read",
        "summary": "Просмотр, изменение и удаление DNS для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **dns_not_found_by_id**\nDNS с указанным ID не обнаружен.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBindDNS"
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_user_device_dns_create",
        "summary": "Просмотр, изменение и удаление DNS для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **dns_not_found_by_id**\nDNS с указанным ID не обнаружен.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceBindDNS"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBindDNS"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_user_device_dns_delete",
        "summary": "Просмотр, изменение и удаление DNS для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **dns_not_found_by_id**\nDNS с указанным ID не обнаружен.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/device/{id}/playlist-type/": {
      "get": {
        "operationId": "api_v1_user_device_playlist-type_read",
        "summary": "Просмотр, изменение и удаление типа плейлиста для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **playlist_type_not_found_by_id**\nТип плейлиста с указанным ID не обнаружен.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBindPlaylistType"
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_user_device_playlist-type_create",
        "summary": "Просмотр, изменение и удаление типа плейлиста для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **playlist_type_not_found_by_id**\nТип плейлиста с указанным ID не обнаружен.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceBindPlaylistType"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBindPlaylistType"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_user_device_playlist-type_delete",
        "summary": "Просмотр, изменение и удаление типа плейлиста для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **playlist_type_not_found_by_id**\nТип плейлиста с указанным ID не обнаружен.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/device/{id}/refresh_ott_id/": {
      "post": {
        "operationId": "api_v1_user_device_refresh_ott_id_create",
        "summary": "Изменение OttId для устройства",
        "description": "Список сообщений **message_type**:\n* **device_ott_id_not_found**\nУказанное значение OttId {] не обнаружено.\n* **device_refresh_ott_id_attempts_count_is_exhausted**\nИсчерпано количество попыток ({}) изменения OttId в сутки, следующая попытка возможна после {}.\n* **device_refresh_ott_id_attempts_interval_not_expired**\nИнтервал между попытками ({}) изменения OttId еще не истек, следующая попытка возможна после {}.\n* **device_refresh_ott_id_active_subscription_not_found**\nОтсутствует активная подписка для устройства.\n* **device_refresh_ott_id_view_type_not_equal_playlist**\nТип просмотра устройства не равен playlist.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/device/{id}/server/": {
      "get": {
        "operationId": "api_v1_user_device_server_read",
        "summary": "Просмотр, изменение и удаление сервера для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **server_not_found_by_id**\nСервер с указанным ID не обнаружен.\n* **server_disabled**\nСервер с указанным ID отключен администратором.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBindServer"
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_user_device_server_create",
        "summary": "Просмотр, изменение и удаление сервера для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **server_not_found_by_id**\nСервер с указанным ID не обнаружен.\n* **server_disabled**\nСервер с указанным ID отключен администратором.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceBindServer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBindServer"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_user_device_server_delete",
        "summary": "Просмотр, изменение и удаление сервера для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **server_not_found_by_id**\nСервер с указанным ID не обнаружен.\n* **server_disabled**\nСервер с указанным ID отключен администратором.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/device/{id}/subscription_auto_renew/": {
      "post": {
        "operationId": "api_v1_user_device_subscription_auto_renew_create",
        "summary": "Изменение флага автоматического продления подписки для устройства",
        "description": "Список сообщений **message_type**:\n* **device_not_have_active_subscription**\nУстройство не имеет активной подписки.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceSubscriptionAutoRenew"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceSubscriptionAutoRenew"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/device/{id}/subscription_to_premium/": {
      "post": {
        "operationId": "api_v1_user_device_subscription_to_premium_create",
        "summary": "Пересчет остатка дней текущей не премиальной подписки в премиум без продления",
        "description": "Список сообщений **message_type**:\n* **device_not_have_active_subscription**\nУстройство не имеет активной подписки.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceSubscriptionToPremium"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceSubscriptionToPremium"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/device/{id}/view_type/": {
      "post": {
        "operationId": "api_v1_user_device_view_type_create",
        "summary": "Изменение типа просмотра для устройства пользователя",
        "description": "Список сообщений **message_type**:\n* **ministra_server_not_found_by_id**\nСервер Ministra с указанным ID не обнаружен.\n* **device_portal_params_empty**\nНе указанны обязательные параметры портала.\n* **user_login_is_already_used**\nУказанный логин пользователя уже используется на сервере Ministra.\n* **could_not_connect_to_api_server**\nНе удалось соединиться с сервером промежуточного API.\n* **attempts_exhausted**\nИсчерпались попытки повторения операции на сервере промежуточного API.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceChangeViewType"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceChangeViewType"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/frontend-language/": {
      "post": {
        "operationId": "api_v1_user_frontend-language_create",
        "summary": "Изменение языка просмотра сайта",
        "description": "Список сообщений **message_type**:\n* **db_template_language_not_found**\nЯзык шаблонов с указанным кодом {0} не обнаружен.\n* **user_frontend_language_is_equal_to_current**\nЯзык просмотра сайта с указанным кодом {0} совпадает с текущим {1}.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserFrontendLanguage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserFrontendLanguage"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/info/": {
      "get": {
        "operationId": "api_v1_user_info_read",
        "summary": "Получение информации о текущем пользователе.",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/meta/": {
      "get": {
        "operationId": "api_v1_user_meta_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/notifications/": {
      "get": {
        "operationId": "api_v1_user_notifications_list",
        "summary": "Список активных общих уведомлений для пользователя",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notification"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/notifications/reading-all": {
      "post": {
        "operationId": "api_v1_user_notifications_reading-all_create",
        "summary": "Установка флага прочтения для всех общих уведомлений",
        "description": ".",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/notifications/{id}/reading": {
      "post": {
        "operationId": "api_v1_user_notifications_reading_create",
        "summary": "Установка флага прочтения для общего уведомления",
        "description": ".",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/personal-notifications/": {
      "get": {
        "operationId": "api_v1_user_personal-notifications_list",
        "summary": "Список активных персональных уведомлений для пользователя",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonalNotification"
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/personal-notifications/reading-all": {
      "post": {
        "operationId": "api_v1_user_personal-notifications_reading-all_create",
        "summary": "Установка флага прочтения для всех персональных уведомлений",
        "description": ".",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/personal-notifications/{id}/reading": {
      "post": {
        "operationId": "api_v1_user_personal-notifications_reading_create",
        "summary": "Установка флага прочтения для персонального уведомления",
        "description": "Список сообщений **message_type**:\n* **personal_notification_belongs_to_another_user**\nПерсональное уведомление {title} принадлежит другому пользователю.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/profile/": {
      "put": {
        "operationId": "api_v1_user_profile_update",
        "summary": "Изменение данных профиля пользователя",
        "description": "Список сообщений **message_type**:\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.\n* **db_template_not_found_by_name**\nШаблон с указанным именем {name} не обнаружен.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_user_profile_partial_update",
        "summary": "Изменение данных профиля пользователя",
        "description": "Список сообщений **message_type**:\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.\n* **db_template_not_found_by_name**\nШаблон с указанным именем {name} не обнаружен.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_user_profile_delete",
        "summary": "Отправка запроса на удаление аккаунта",
        "description": ".",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/profile/change-email": {
      "post": {
        "operationId": "api_v1_user_profile_change-email_create",
        "summary": "Изменение email пользователя",
        "description": "Список сообщений **message_type**:\n* **user_change_email_token_invalid**\nТокен указан неверно.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfileChangeEmail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserProfileChangeEmail"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/profile/change-email-request-current": {
      "post": {
        "operationId": "api_v1_user_profile_change-email-request-current_create",
        "summary": "Отправка запроса изменения email на текущий email пользователя",
        "description": "Список сообщений **message_type**:\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.\n* **db_template_not_found_by_name**\nШаблон с указанным именем {name} не обнаружен.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/profile/change-email-request-new": {
      "post": {
        "operationId": "api_v1_user_profile_change-email-request-new_create",
        "summary": "Отправка запроса изменения email на новый email пользователя",
        "description": "Список сообщений **message_type**:\n* **new_user_email_is_equal_to_current**\nУказанный e-mail адрес совпадает с текущим e-mail адресом пользователя.\n* **user_email_already_exists**\nПользователь с указанным e-mail адресом уже зарегистрирован.\n* **user_change_email_uid_invalid**\nUID указан неверно.\n* **user_change_email_token_invalid**\nТокен указан неверно.\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.\n* **db_template_not_found_by_name**\nШаблон с указанным именем {name} не обнаружен.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfileChangeEmailRequestNew"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserProfileChangeEmailRequestNew"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/profile/delete-account": {
      "post": {
        "operationId": "api_v1_user_profile_delete-account_create",
        "summary": "Удаление аккаунта пользователя",
        "description": "Список сообщений **message_type**:\n* **user_delete_account_token_invalid**\nТокен указан неверно.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfileDeleteAccount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserProfileDeleteAccount"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/profile/unsubscribe-mail-list": {
      "post": {
        "operationId": "api_v1_user_profile_unsubscribe-mail-list_create",
        "summary": "Отписаться от рассылки",
        "description": "Список сообщений **message_type**:\n* **unsubscribe_mail_list_token_invalid**\nУказан некорректный токен для отмены подписки на рассылку.\n* **unsubscribe_mail_list_email_invalid**\nУказанный e-mail не совпадает с e-mail пользователя.\n* **unsubscribe_mail_list_already_completed**\nОтмена подписки на рассылку уже выполнена.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfileUnsubscribeMailList"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserProfileUnsubscribeMailList"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/profile/withdrawal-wallets": {
      "get": {
        "operationId": "api_v1_user_profile_withdrawal-wallets_list",
        "summary": "Список кошельков пользователя в системах для вывода средств, создание нового кошелька",
        "description": "Список сообщений **message_type**:\n* **withdrawal_system_not_found_by_id**\nСистема для вывода средств с указанным ID не обнаружена.\n* **withdrawal_wallet_user_identifier_does_not_match_template**\nУказанный идентификатор пользователя не соответствует шаблону.\n* **withdrawal_wallet_user_identifier_already_exists**\nУказанный идентификатор пользователя уже используется для другого кошелька.\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.\n* **db_template_not_found_by_name**\nШаблон с указанным именем {name} не обнаружен.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WithdrawalWallet"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_user_profile_withdrawal-wallets_create",
        "summary": "Список кошельков пользователя в системах для вывода средств, создание нового кошелька",
        "description": "Список сообщений **message_type**:\n* **withdrawal_system_not_found_by_id**\nСистема для вывода средств с указанным ID не обнаружена.\n* **withdrawal_wallet_user_identifier_does_not_match_template**\nУказанный идентификатор пользователя не соответствует шаблону.\n* **withdrawal_wallet_user_identifier_already_exists**\nУказанный идентификатор пользователя уже используется для другого кошелька.\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.\n* **db_template_not_found_by_name**\nШаблон с указанным именем {name} не обнаружен.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalWalletCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalWalletCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/profile/withdrawal-wallets/confirm": {
      "post": {
        "operationId": "api_v1_user_profile_withdrawal-wallets_confirm_create",
        "summary": "Подтверждение кошелька в системе для вывода средств",
        "description": "Список сообщений **message_type**:\n* **withdrawal_wallet_confirm_token_invalid**\nУказан некорректный или просроченный токен для подтверждения кошелька.\n* **withdrawal_wallet_not_found_by_id**\nКошелек для вывода средств с указанным ID не обнаружен.\n* **withdrawal_wallet_already_confirmed**\nКошелек для вывода средств с указанным ID уже подтвержден.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalWalletConfirm"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalWalletConfirm"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/profile/withdrawal-wallets/{id}": {
      "get": {
        "operationId": "api_v1_user_profile_withdrawal-wallets_read",
        "summary": "Просмотр, изменение и удаление кошелька в системе для вывода средств",
        "description": "Список сообщений **message_type**:\n* **withdrawal_system_not_found_by_id**\nСистема для вывода средств с указанным ID не обнаружена.\n* **withdrawal_wallet_user_identifier_does_not_match_template**\nУказанный идентификатор пользователя не соответствует шаблону.\n* **withdrawal_wallet_user_identifier_already_exists**\nУказанный идентификатор пользователя уже используется для другого кошелька.\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.\n* **db_template_not_found_by_name**\nШаблон с указанным именем {name} не обнаружен.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalWallet"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_user_profile_withdrawal-wallets_update",
        "summary": "Просмотр, изменение и удаление кошелька в системе для вывода средств",
        "description": "Список сообщений **message_type**:\n* **withdrawal_system_not_found_by_id**\nСистема для вывода средств с указанным ID не обнаружена.\n* **withdrawal_wallet_user_identifier_does_not_match_template**\nУказанный идентификатор пользователя не соответствует шаблону.\n* **withdrawal_wallet_user_identifier_already_exists**\nУказанный идентификатор пользователя уже используется для другого кошелька.\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.\n* **db_template_not_found_by_name**\nШаблон с указанным именем {name} не обнаружен.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalWalletCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalWalletCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_user_profile_withdrawal-wallets_partial_update",
        "summary": "Просмотр, изменение и удаление кошелька в системе для вывода средств",
        "description": "Список сообщений **message_type**:\n* **withdrawal_system_not_found_by_id**\nСистема для вывода средств с указанным ID не обнаружена.\n* **withdrawal_wallet_user_identifier_does_not_match_template**\nУказанный идентификатор пользователя не соответствует шаблону.\n* **withdrawal_wallet_user_identifier_already_exists**\nУказанный идентификатор пользователя уже используется для другого кошелька.\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.\n* **db_template_not_found_by_name**\nШаблон с указанным именем {name} не обнаружен.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalWalletCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalWalletCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_user_profile_withdrawal-wallets_delete",
        "summary": "Просмотр, изменение и удаление кошелька в системе для вывода средств",
        "description": "Список сообщений **message_type**:\n* **withdrawal_system_not_found_by_id**\nСистема для вывода средств с указанным ID не обнаружена.\n* **withdrawal_wallet_user_identifier_does_not_match_template**\nУказанный идентификатор пользователя не соответствует шаблону.\n* **withdrawal_wallet_user_identifier_already_exists**\nУказанный идентификатор пользователя уже используется для другого кошелька.\n* **user_email_not_send_message**\nОшибка отправки сообщения на email пользователя.\n* **db_template_not_found_by_name**\nШаблон с указанным именем {name} не обнаружен.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/referrals/": {
      "get": {
        "operationId": "api_v1_user_referrals_list",
        "summary": "Список рефералов пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Referral"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/referrals/balance-transfer": {
      "post": {
        "operationId": "api_v1_user_referrals_balance-transfer_create",
        "summary": "Перевод реферального дохода на текущий баланс пользователя",
        "description": "Список сообщений **message_type**:\n* **not_enough_money**\nНедостаточно средств на балансе реферального счета.\n* **amount_must_be_positive**\nСумма должна быть больше нуля.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferralBalanceWithdraw"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReferralBalanceWithdraw"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/referrals/balance/transactions": {
      "get": {
        "operationId": "api_v1_user_referrals_balance_transactions_list",
        "summary": "Список транзакций вывода средств, перевода на текущий баланс",
        "description": ".",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WithdrawalTransaction"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/referrals/balance/withdrawal-transactions": {
      "get": {
        "operationId": "api_v1_user_referrals_balance_withdrawal-transactions_list",
        "summary": "Список транзакций вывода средств, создание новой транзакции вывода средств",
        "description": "Список сообщений **message_type**:\n* **not_enough_money**\nНедостаточно средств на балансе реферального счета.\n* **amount_must_be_positive**\nСумма должна быть больше нуля.\n* **withdrawal_system_not_found_by_id**\nСистема для вывода средств с указанным ID не обнаружена.\n* **withdrawal_wallet_not_found_by_id**\nКошелек для вывода средств с указанным ID не обнаружен.\n* **withdrawal_system_is_disabled**\nСистема для вывода средств с указанным ID отключена.\n* **withdrawal_wallet_with_different_withdrawal_system**\nУказан кошелек для вывода средств для другой системы вывода средств.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "withdrawal_system",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WithdrawalTransaction"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_v1_user_referrals_balance_withdrawal-transactions_create",
        "summary": "Список транзакций вывода средств, создание новой транзакции вывода средств",
        "description": "Список сообщений **message_type**:\n* **not_enough_money**\nНедостаточно средств на балансе реферального счета.\n* **amount_must_be_positive**\nСумма должна быть больше нуля.\n* **withdrawal_system_not_found_by_id**\nСистема для вывода средств с указанным ID не обнаружена.\n* **withdrawal_wallet_not_found_by_id**\nКошелек для вывода средств с указанным ID не обнаружен.\n* **withdrawal_system_is_disabled**\nСистема для вывода средств с указанным ID отключена.\n* **withdrawal_wallet_with_different_withdrawal_system**\nУказан кошелек для вывода средств для другой системы вывода средств.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionCreate"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/referrals/balance/withdrawal-transactions/{id}": {
      "get": {
        "operationId": "api_v1_user_referrals_balance_withdrawal-transactions_read",
        "summary": "Просмотр, изменение и удаление транзакции вывода средств",
        "description": "Список сообщений **message_type**:\n* **not_enough_money**\nНедостаточно средств на балансе реферального счета.\n* **withdrawal_transaction_is_transfered**\nТранзакция вывода средств уже обработана.\n* **amount_must_be_positive**\nСумма должна быть больше нуля.\n* **amount_should_not_exceed_balance**\nСумма не должна превышать остаток на балансе.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionUpdate"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_v1_user_referrals_balance_withdrawal-transactions_update",
        "summary": "Просмотр, изменение и удаление транзакции вывода средств",
        "description": "Список сообщений **message_type**:\n* **not_enough_money**\nНедостаточно средств на балансе реферального счета.\n* **withdrawal_transaction_is_transfered**\nТранзакция вывода средств уже обработана.\n* **amount_must_be_positive**\nСумма должна быть больше нуля.\n* **amount_should_not_exceed_balance**\nСумма не должна превышать остаток на балансе.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionUpdate"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_v1_user_referrals_balance_withdrawal-transactions_partial_update",
        "summary": "Просмотр, изменение и удаление транзакции вывода средств",
        "description": "Список сообщений **message_type**:\n* **not_enough_money**\nНедостаточно средств на балансе реферального счета.\n* **withdrawal_transaction_is_transfered**\nТранзакция вывода средств уже обработана.\n* **amount_must_be_positive**\nСумма должна быть больше нуля.\n* **amount_should_not_exceed_balance**\nСумма не должна превышать остаток на балансе.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalTransactionUpdate"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_v1_user_referrals_balance_withdrawal-transactions_delete",
        "summary": "Просмотр, изменение и удаление транзакции вывода средств",
        "description": "Список сообщений **message_type**:\n* **not_enough_money**\nНедостаточно средств на балансе реферального счета.\n* **withdrawal_transaction_is_transfered**\nТранзакция вывода средств уже обработана.\n* **amount_must_be_positive**\nСумма должна быть больше нуля.\n* **amount_should_not_exceed_balance**\nСумма не должна превышать остаток на балансе.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/user/referrals/link-click-throughs": {
      "get": {
        "operationId": "api_v1_user_referrals_link-click-throughs_list",
        "summary": "Список переходов по реферальной ссылке пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReferralLinkClickThrough"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/referrals/statistics": {
      "get": {
        "operationId": "api_v1_user_referrals_statistics_read",
        "summary": "Статистика внутреннего счета пользователя за период",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReferralStatistics"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/referrals/transactions": {
      "get": {
        "operationId": "api_v1_user_referrals_transactions_list",
        "summary": "Список реферальных транзакций пользователя",
        "description": ".",
        "parameters": [
          {
            "name": "d_begin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "d_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReferralTransaction"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/timezone/": {
      "get": {
        "operationId": "api_v1_user_timezone_list",
        "summary": "Получение списка временных зон.",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/withdrawal/systems": {
      "get": {
        "operationId": "api_v1_user_withdrawal_systems_list",
        "summary": "Список систем для вывода средств",
        "description": ".",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WithdrawalSystem"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/v1/user/withdrawal/systems/{id}": {
      "get": {
        "operationId": "api_v1_user_withdrawal_systems_read",
        "summary": "Просмотр системы для вывода средств",
        "description": ".",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WithdrawalSystem"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Withdrawal system.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api_external/v1/app/hwid/": {
      "post": {
        "operationId": "api_external_v1_app_hwid_create",
        "description": "Привязка приложения с указанным HWID к устройству пользователя по коду сопряжения.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppHWID"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AppHWID"
            }
          }
        },
        "tags": ["api_external"]
      },
      "parameters": []
    },
    "/api_external/v1/app/{hwid}/": {
      "get": {
        "operationId": "api_external_v1_app_read",
        "description": "Получение информации для приложения с указанным HWID.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api_external"]
      },
      "parameters": [
        {
          "name": "hwid",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api_external/v1/bpl-data/": {
      "get": {
        "operationId": "api_external_v1_bpl-data_list",
        "summary": "Данные для внешнего сервиса генерации плейлистов.",
        "description": "Отбираются активные устройства активных пользователей с указанным playlist_id и view_type=playlist.\nОтбираются видимые каналы видимых групп для плейлистов.\nОтбираются форматы файлов с плейлистом.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api_external"]
      },
      "parameters": []
    },
    "/api_external/v1/das-data/": {
      "get": {
        "operationId": "api_external_v1_das-data_list",
        "summary": "Данные для внешнего сервиса авторизации устройств.",
        "description": "Отбираются активные устройства активных пользователей с активной подпиской.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api_external"]
      },
      "parameters": []
    },
    "/api_external/v1/dns-list/": {
      "get": {
        "operationId": "api_external_v1_dns-list_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api_external"]
      },
      "parameters": []
    },
    "/api_external/v1/playlist/{ott_id}/{fmt}/": {
      "get": {
        "operationId": "api_external_v1_playlist_read",
        "summary": "Получение плейлиста в указанном формате для устройства пользователя с указанным OttId",
        "description": "Список сообщений **message_type**:\n* **device_not_found_by_ott_id**\nУстройство пользователя с указанным OttId не обнаружено.\n* **device_not_bind_server**\nУстройство пользователя с указанным OttId не связано с сервером.\n* **playlist_type_not_found_by_format_name**\nУказанный формат плейлиста не поддерживается.\n* **playlist_formatter_not_contain_handler_specified_format**\nМеханизм формирования плейлиста в указанном формате еще не реализован.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api_external"]
      },
      "parameters": [
        {
          "name": "fmt",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "ott_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api_external/v1/playlist/{ott_id}/{fmt}/file/": {
      "get": {
        "operationId": "api_external_v1_playlist_file_list",
        "summary": "Получение файла плейлиста в указанном формате для устройства пользователя с указанным OttId",
        "description": "Список сообщений **message_type**:\n* **device_not_found_by_ott_id**\nУстройство пользователя с указанным OttId не обнаружено.\n* **device_not_bind_server**\nУстройство пользователя с указанным OttId не связано с сервером.\n* **playlist_type_not_found_by_format_name**\nУказанный формат плейлиста не поддерживается.\n* **playlist_formatter_not_contain_handler_specified_format**\nМеханизм формирования плейлиста в указанном формате еще не реализован.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api_external"]
      },
      "parameters": [
        {
          "name": "fmt",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "ott_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api_external/v1/user/ottid/": {
      "get": {
        "operationId": "api_external_v1_user_ottid_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api_external"]
      },
      "parameters": []
    }
  },
  "definitions": {
    "ActionGroup": {
      "required": ["title", "label"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "label": {
          "title": "Label",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "public": {
          "title": "Public",
          "type": "boolean"
        }
      }
    },
    "LogsActions": {
      "required": ["user_id"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "user_id": {
          "title": "User id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "message": {
          "title": "Message",
          "type": "string",
          "readOnly": true
        },
        "action_type": {
          "title": "Action type",
          "type": "integer",
          "x-nullable": true
        },
        "action_status_type": {
          "title": "Action status type",
          "type": "integer",
          "x-nullable": true
        },
        "group": {
          "title": "Group",
          "type": "integer"
        },
        "user_ip": {
          "title": "User ip",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ActionType": {
      "required": ["group", "title"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "statuses": {
          "title": "Statuses",
          "type": "string",
          "readOnly": true
        },
        "group": {
          "$ref": "#/definitions/ActionGroup"
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "label": {
          "title": "Label",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "VerifyEmail": {
      "required": ["key"],
      "type": "object",
      "properties": {
        "key": {
          "title": "Key",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "EmailConfirmation": {
      "required": ["email"],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        }
      }
    },
    "SocialLogin": {
      "type": "object",
      "properties": {
        "access_token": {
          "title": "Access token",
          "type": "string"
        },
        "code": {
          "title": "Code",
          "type": "string"
        }
      }
    },
    "MyPasswordResetConfirm": {
      "required": ["new_password1", "new_password2", "uid", "token"],
      "type": "object",
      "properties": {
        "new_password1": {
          "title": "New password1",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "new_password2": {
          "title": "New password2",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "uid": {
          "title": "Uid",
          "type": "string",
          "minLength": 1
        },
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "MyPasswordReset": {
      "required": ["email"],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        },
        "fingerprint_token": {
          "title": "Fingerprint token",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "captcha_token": {
          "title": "Captcha token",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        }
      }
    },
    "SignIn": {
      "required": ["username", "password"],
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "type": "string",
          "format": "email",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        },
        "fingerprint_token": {
          "title": "Fingerprint token",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "captcha_token": {
          "title": "Captcha token",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        }
      }
    },
    "UserRegistration": {
      "required": ["email", "password1", "password2", "country", "frontend_language", "captcha_token", "fingerprint_token"],
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "type": "string",
          "maxLength": 150,
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        },
        "password1": {
          "title": "Password1",
          "type": "string",
          "minLength": 1
        },
        "password2": {
          "title": "Password2",
          "type": "string",
          "minLength": 1
        },
        "country": {
          "title": "Country",
          "type": "string",
          "enum": [
            "AF",
            "AL",
            "DZ",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BT",
            "BO",
            "BW",
            "BR",
            "BN",
            "BG",
            "BI",
            "KH",
            "CM",
            "CA",
            "TD",
            "CL",
            "CN",
            "CO",
            "CG",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "DK",
            "DJ",
            "DM",
            "EC",
            "EG",
            "SV",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FJ",
            "FI",
            "FR",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GY",
            "HT",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NI",
            "NE",
            "NG",
            "NU",
            "MK",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "WS",
            "SN",
            "RS",
            "SG",
            "SK",
            "SI",
            "SO",
            "ES",
            "SD",
            "SR",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TG",
            "TK",
            "TO",
            "TN",
            "TR",
            "TM",
            "TV",
            "UG",
            "UA",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "YE",
            "ZM",
            "ZW",
            "AX",
            "AS",
            "BS",
            "BM",
            "BV",
            "KY",
            "CF",
            "CX",
            "KM",
            "CK",
            "DO",
            "GQ",
            "FO",
            "GF",
            "PF",
            "VA",
            "IM",
            "KP",
            "KR",
            "MH",
            "NC",
            "NZ",
            "NF",
            "SA",
            "SC",
            "SB",
            "ZA",
            "SS",
            "GB",
            "EH",
            "AG",
            "BA",
            "TF",
            "MP",
            "TT",
            "AE",
            "US",
            "WF",
            "TC",
            "UM",
            "IO",
            "HM",
            "GS",
            "VG",
            "VI",
            "MF",
            "SX",
            "SJ",
            "CD",
            "FM",
            "CC",
            "FK",
            "SH",
            "SM",
            "PS",
            "BQ",
            "BF",
            "CV",
            "CR",
            "GW",
            "PR",
            "BL",
            "LC",
            "SL",
            "LK",
            "TL",
            "PG",
            "KN",
            "PM",
            "VC",
            "ST",
            "CI"
          ]
        },
        "referral_token": {
          "title": "Referral token",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "referral_link_click_through_id": {
          "title": "Referral link click through id",
          "type": "integer",
          "x-nullable": true
        },
        "frontend_language": {
          "title": "Frontend language",
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "captcha_token": {
          "title": "Captcha token",
          "type": "string",
          "minLength": 1
        },
        "fingerprint_token": {
          "title": "Fingerprint token",
          "type": "string",
          "minLength": 1
        },
        "fingerprint_pro_token": {
          "title": "Fingerprint pro token",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        }
      }
    },
    "ValidateEmail": {
      "required": ["email"],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        }
      }
    },
    "ValidatePasswordChangeToken": {
      "required": ["uid", "token"],
      "type": "object",
      "properties": {
        "uid": {
          "title": "Uid",
          "type": "string",
          "minLength": 1
        },
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ValidateReferralToken": {
      "required": ["referral_token"],
      "type": "object",
      "properties": {
        "referral_token": {
          "title": "Referral token",
          "type": "string",
          "minLength": 1
        },
        "referer_url": {
          "title": "Referer url",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        }
      }
    },
    "PaymentSystemDetail": {
      "required": ["title"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "payment_url": {
          "title": "Payment URL",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "callback_url": {
          "title": "Callback URL",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "status_url": {
          "title": "Status URL",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "login": {
          "title": "Login",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "password": {
          "title": "Password",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "is_disabled": {
          "title": "Disabled?",
          "type": "boolean"
        },
        "is_hidden": {
          "title": "Hidden?",
          "type": "boolean"
        },
        "is_hidden_date": {
          "title": "Hidden date",
          "type": "string",
          "format": "date-time"
        },
        "bonus_percent": {
          "title": "Bonus percent",
          "type": "number",
          "format": "decimal"
        },
        "settings": {
          "title": "Settings",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        }
      }
    },
    "PaymentSystem": {
      "required": ["title"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "is_disabled": {
          "title": "Disabled?",
          "type": "boolean"
        },
        "is_hidden": {
          "title": "Hidden?",
          "type": "boolean"
        },
        "bonus_percent": {
          "title": "Bonus percent",
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "PaymentTransactionAdminReplenishment": {
      "required": ["user_id", "payment_system_id", "amount", "is_used_bonuses"],
      "type": "object",
      "properties": {
        "user_id": {
          "title": "User id",
          "type": "integer"
        },
        "payment_system_id": {
          "title": "Payment system id",
          "type": "integer"
        },
        "amount": {
          "title": "Amount",
          "type": "number",
          "format": "decimal"
        },
        "is_used_bonuses": {
          "title": "Is used bonuses",
          "type": "boolean"
        }
      }
    },
    "UserShort": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "first_name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 30
        },
        "last_name": {
          "title": "Фамилия",
          "type": "string",
          "maxLength": 150
        },
        "email": {
          "title": "Email адрес",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "is_active": {
          "title": "Активный",
          "description": "Отметьте, если пользователь должен считаться активным. Уберите эту отметку вместо удаления учётной записи.",
          "type": "boolean"
        }
      }
    },
    "PaymentTransaction": {
      "required": ["user", "currency", "transaction_type_name", "payment_system", "admin"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "user": {
          "$ref": "#/definitions/UserShort"
        },
        "amount": {
          "title": "Amount",
          "type": "number",
          "format": "decimal"
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "minLength": 1
        },
        "transaction_type": {
          "title": "Payment transaction type",
          "type": "string",
          "enum": ["replenishment", "changing_admin", "purchase", "withdrawal", "refund", "referral"]
        },
        "transaction_type_name": {
          "title": "Transaction type name",
          "type": "string",
          "minLength": 1
        },
        "payment_system": {
          "$ref": "#/definitions/PaymentSystem"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "admin": {
          "$ref": "#/definitions/UserShort"
        },
        "description_wallet": {
          "title": "Description wallet",
          "type": "string",
          "readOnly": true
        },
        "bonus_amount": {
          "title": "Bonus amount",
          "type": "number",
          "format": "decimal"
        },
        "bonus_type": {
          "title": "Bonus type",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        }
      }
    },
    "PaymentTransactionReplenishment": {
      "required": ["payment_system_id", "amount"],
      "type": "object",
      "properties": {
        "payment_system_id": {
          "title": "Payment system id",
          "type": "integer"
        },
        "amount": {
          "title": "Amount",
          "type": "number",
          "format": "decimal"
        },
        "policy_agreement": {
          "title": "Policy agreement",
          "type": "boolean",
          "default": false
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "default": "usd",
          "minLength": 1
        },
        "force": {
          "title": "Force",
          "type": "boolean",
          "default": false
        }
      }
    },
    "EmailTemplate": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "x-nullable": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmailTemplateContentCreate": {
      "required": ["language"],
      "type": "object",
      "properties": {
        "language": {
          "title": "Language",
          "type": "integer"
        },
        "html_content": {
          "title": "HTML content",
          "type": "string",
          "x-nullable": true
        },
        "tmp_email_template_content_id": {
          "title": "Tmp email template content id",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        }
      }
    },
    "EmailTemplateCreate": {
      "required": ["name", "contents"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "x-nullable": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailTemplateContentCreate"
          }
        }
      }
    },
    "EmailTemplateContentImage": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "image": {
          "title": "Изображение",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "email_template_content": {
          "title": "Email template content",
          "type": "integer",
          "x-nullable": true
        },
        "tmp_email_template_content_id": {
          "title": "Temporary email template id",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        }
      }
    },
    "EmailTemplateContent": {
      "required": ["email_template", "language"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "email_template": {
          "title": "Email template",
          "type": "integer"
        },
        "language": {
          "title": "Language",
          "type": "integer"
        },
        "html_content": {
          "title": "HTML content",
          "type": "string",
          "x-nullable": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailTemplateContentImage"
          },
          "readOnly": true
        }
      }
    },
    "EmailTemplateDetail": {
      "required": ["name", "contents"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "x-nullable": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        },
        "contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailTemplateContent"
          }
        }
      }
    },
    "EmailTemplateContentUpdate": {
      "required": ["language"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "language": {
          "title": "Language",
          "type": "integer"
        },
        "html_content": {
          "title": "HTML content",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "EmailTemplateUpdate": {
      "required": ["name", "contents"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "x-nullable": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailTemplateContentUpdate"
          }
        }
      }
    },
    "Language": {
      "required": ["code", "name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "is_default": {
          "title": "Is default",
          "type": "string",
          "readOnly": true
        },
        "code": {
          "title": "Code",
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TemplateContentImage": {
      "required": ["template_content"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "image": {
          "title": "Изображение",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "template_content": {
          "title": "Template content",
          "type": "integer"
        }
      }
    },
    "TemplateContent": {
      "required": ["template", "language"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "template": {
          "title": "Template",
          "type": "integer"
        },
        "language": {
          "title": "Language",
          "type": "integer"
        },
        "subject": {
          "title": "Subject",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "html_content": {
          "title": "HTML content",
          "type": "string",
          "x-nullable": true
        },
        "text_content": {
          "title": "Text content",
          "type": "string",
          "x-nullable": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateContentImage"
          },
          "readOnly": true
        }
      }
    },
    "Template": {
      "required": ["name", "template_name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "template_name": {
          "title": "Template name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "x-nullable": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": ["email", "notification"]
        },
        "template_aliases": {
          "title": "Template aliases",
          "type": "string",
          "x-nullable": true
        },
        "template_params": {
          "title": "Template params",
          "type": "string",
          "x-nullable": true
        },
        "email_template": {
          "title": "Email template",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "TemplateContentTestSendingEmail": {
      "required": ["email_template_id", "language_id", "subject", "html_content", "text_content", "template_context", "email"],
      "type": "object",
      "properties": {
        "email_template_id": {
          "title": "Email template id",
          "type": "integer"
        },
        "language_id": {
          "title": "Language id",
          "type": "integer"
        },
        "subject": {
          "title": "Subject",
          "type": "string",
          "minLength": 1
        },
        "html_content": {
          "title": "Html content",
          "type": "string",
          "x-nullable": true
        },
        "text_content": {
          "title": "Text content",
          "type": "string",
          "x-nullable": true
        },
        "template_context": {
          "title": "Template context",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        }
      }
    },
    "TemplateDetail": {
      "required": ["name", "template_name", "contents"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": ["email", "notification"]
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "template_name": {
          "title": "Template name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "x-nullable": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        },
        "template_aliases": {
          "title": "Template aliases",
          "type": "string",
          "x-nullable": true
        },
        "template_params": {
          "title": "Template params",
          "type": "string",
          "x-nullable": true
        },
        "email_template": {
          "title": "Email template",
          "type": "integer",
          "x-nullable": true
        },
        "contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateContent"
          }
        }
      }
    },
    "TemplateUpdate": {
      "type": "object",
      "properties": {
        "email_template": {
          "title": "Email template",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "FaqImage": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "image": {
          "title": "Изображение",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "faq": {
          "title": "Faq",
          "type": "integer",
          "x-nullable": true
        },
        "tmp_faq_id": {
          "title": "Temporary faq id",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        }
      }
    },
    "FaqList": {
      "required": ["question_title"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "question_title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "question_text": {
          "title": "Question",
          "type": "string",
          "x-nullable": true
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "language": {
          "title": "Language",
          "type": "integer"
        },
        "is_published": {
          "title": "Is published",
          "type": "boolean"
        },
        "order": {
          "title": "Sorting",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "number_of_views": {
          "title": "Number of views",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        }
      }
    },
    "FaqCreate": {
      "required": ["question_title", "answers", "tags"],
      "type": "object",
      "properties": {
        "question_title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "question_text": {
          "title": "Question",
          "type": "string",
          "x-nullable": true
        },
        "answers": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "language": {
          "title": "Language",
          "type": "integer"
        },
        "is_published": {
          "title": "Is published",
          "type": "boolean"
        },
        "order": {
          "title": "Sorting",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "tmp_faq_id": {
          "title": "Tmp faq id",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "Tag": {
      "required": ["title"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TagCreate": {
      "required": ["title"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "FaqDetail": {
      "required": ["question_title"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        },
        "question_title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "question_text": {
          "title": "Question",
          "type": "string",
          "x-nullable": true
        },
        "answers": {
          "title": "Answers",
          "type": "string",
          "readOnly": true
        },
        "is_published": {
          "title": "Is published",
          "type": "boolean"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FaqImage"
          },
          "readOnly": true
        },
        "order": {
          "title": "Sorting",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "language": {
          "title": "Language",
          "type": "integer"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "number_of_views": {
          "title": "Number of views",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        }
      }
    },
    "HelpDeskCase": {
      "required": [
        "case_id",
        "case_number",
        "subject",
        "user_id",
        "staff_id",
        "group_id",
        "status",
        "priority",
        "channel",
        "recipient",
        "deleted",
        "spam",
        "parent_case_id",
        "language_id",
        "dt_create"
      ],
      "type": "object",
      "properties": {
        "is_unread": {
          "title": "Is unread",
          "type": "string",
          "readOnly": true
        },
        "case_id": {
          "title": "Case id",
          "type": "integer"
        },
        "case_number": {
          "title": "Case number",
          "type": "string",
          "minLength": 1
        },
        "subject": {
          "title": "Subject",
          "type": "string",
          "minLength": 1
        },
        "user_id": {
          "title": "User id",
          "type": "integer"
        },
        "staff_id": {
          "title": "Staff id",
          "type": "integer"
        },
        "group_id": {
          "title": "Group id",
          "type": "integer"
        },
        "status": {
          "title": "Status",
          "type": "string",
          "minLength": 1
        },
        "priority": {
          "title": "Priority",
          "type": "string",
          "minLength": 1
        },
        "channel": {
          "title": "Channel",
          "type": "string",
          "minLength": 1
        },
        "recipient": {
          "title": "Recipient",
          "type": "string",
          "minLength": 1
        },
        "deleted": {
          "title": "Deleted",
          "type": "boolean"
        },
        "spam": {
          "title": "Spam",
          "type": "boolean"
        },
        "parent_case_id": {
          "title": "Parent case id",
          "type": "integer"
        },
        "language_id": {
          "title": "Language id",
          "type": "integer"
        },
        "dt_create": {
          "title": "Dt create",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Dt update",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "dt_close": {
          "title": "Dt close",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "dt_last_response": {
          "title": "Dt last response",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "HelpDeskCaseCreate": {
      "required": ["user_email", "subject", "content"],
      "type": "object",
      "properties": {
        "user_email": {
          "title": "User email",
          "type": "string",
          "minLength": 1
        },
        "subject": {
          "title": "Subject",
          "type": "string",
          "minLength": 1
        },
        "content": {
          "title": "Content",
          "type": "string",
          "minLength": 1
        },
        "content_html": {
          "title": "Content html",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "user_full_name": {
          "title": "User full name",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "channel": {
          "title": "Channel",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "language_id": {
          "title": "Language id",
          "type": "integer",
          "x-nullable": true
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        }
      }
    },
    "HelpDeskCaseCopyrightHolderCreate": {
      "required": ["captcha_token", "user_email", "subject", "content", "user_full_name"],
      "type": "object",
      "properties": {
        "captcha_token": {
          "title": "Captcha token",
          "type": "string",
          "minLength": 1
        },
        "user_email": {
          "title": "User email",
          "type": "string",
          "minLength": 1
        },
        "subject": {
          "title": "Subject",
          "type": "string",
          "minLength": 1
        },
        "content": {
          "title": "Content",
          "type": "string",
          "minLength": 1
        },
        "user_full_name": {
          "title": "User full name",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "HelpDeskCaseUnreadMessage": {
      "required": ["case_count"],
      "type": "object",
      "properties": {
        "case_count": {
          "title": "Case count",
          "type": "integer"
        }
      }
    },
    "Dataclass": {
      "required": ["file_id", "file_name", "file_size", "mime_type", "url"],
      "type": "object",
      "properties": {
        "file_id": {
          "title": "File id",
          "type": "integer"
        },
        "file_name": {
          "title": "File name",
          "type": "string",
          "minLength": 1
        },
        "file_size": {
          "title": "File size",
          "type": "integer"
        },
        "mime_type": {
          "title": "Mime type",
          "type": "string",
          "minLength": 1
        },
        "url": {
          "title": "Url",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "HelpDeskCaseMessage": {
      "required": ["message_id", "user_id", "staff_id", "content", "note", "sent_via_rule", "dt_create", "attachments"],
      "type": "object",
      "properties": {
        "is_unread": {
          "title": "Is unread",
          "type": "string",
          "readOnly": true
        },
        "message_id": {
          "title": "Message id",
          "type": "integer"
        },
        "user_id": {
          "title": "User id",
          "type": "integer"
        },
        "staff_id": {
          "title": "Staff id",
          "type": "integer"
        },
        "content": {
          "title": "Content",
          "type": "string",
          "minLength": 1
        },
        "note": {
          "title": "Note",
          "type": "boolean"
        },
        "sent_via_rule": {
          "title": "Sent via rule",
          "type": "boolean"
        },
        "dt_create": {
          "title": "Dt create",
          "type": "string",
          "format": "date-time"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dataclass"
          }
        },
        "content_html": {
          "title": "Content html",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "rating": {
          "title": "Rating",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "rating_comment": {
          "title": "Rating comment",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "rated_staff_id": {
          "title": "Rated staff id",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "HelpDeskCaseMessageCreate": {
      "required": ["content"],
      "type": "object",
      "properties": {
        "content": {
          "title": "Content",
          "type": "string",
          "minLength": 1
        },
        "content_html": {
          "title": "Content html",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        }
      }
    },
    "AdminChannelGroup": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "channels_count": {
          "title": "Channels count",
          "type": "integer",
          "readOnly": true
        },
        "count_selected": {
          "title": "Count selected",
          "type": "integer",
          "readOnly": true
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "csv_group_id": {
          "title": "Csv group id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "is_hidden": {
          "title": "Is hidden",
          "type": "boolean"
        },
        "ordering_id": {
          "title": "Position",
          "type": "number"
        },
        "playlist": {
          "title": "Playlist",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "ChannelGroupDragNDrop": {
      "required": ["prev_group_id"],
      "type": "object",
      "properties": {
        "prev_group_id": {
          "title": "Prev group id",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "AdminChannel": {
      "required": ["name", "disabled_countries"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "group_name": {
          "title": "Group name",
          "type": "string",
          "readOnly": true
        },
        "group_id": {
          "title": "Group id",
          "type": "string",
          "readOnly": true
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "csv_channel_id": {
          "title": "Csv channel id",
          "type": "integer",
          "readOnly": true
        },
        "csv_group_id": {
          "title": "Csv group id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "name_translit": {
          "title": "Name Translit",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "minLength": 1
        },
        "tvg_logo": {
          "title": "Tvg logo",
          "type": "string",
          "maxLength": 20,
          "x-nullable": true
        },
        "mode": {
          "title": "Mode",
          "type": "string",
          "maxLength": 20,
          "x-nullable": true
        },
        "sid": {
          "title": "Sid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "tsid": {
          "title": "Tsid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "onid": {
          "title": "Onid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "ns": {
          "title": "Ns",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "external_id": {
          "title": "External id",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "is_hidden": {
          "title": "Скрытый",
          "type": "boolean"
        },
        "is_archived": {
          "title": "Архив",
          "type": "boolean"
        },
        "ordering_id": {
          "title": "Position",
          "type": "number"
        },
        "disabled_countries": {
          "type": "array",
          "items": {
            "title": "Заблокированные страны",
            "type": "string",
            "enum": [
              "AF",
              "AL",
              "DZ",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BT",
              "BO",
              "BW",
              "BR",
              "BN",
              "BG",
              "BI",
              "KH",
              "CM",
              "CA",
              "TD",
              "CL",
              "CN",
              "CO",
              "CG",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "EC",
              "EG",
              "SV",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FJ",
              "FI",
              "FR",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GY",
              "HT",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NI",
              "NE",
              "NG",
              "NU",
              "MK",
              "NO",
              "OM",
              "PK",
              "PW",
              "PA",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "WS",
              "SN",
              "RS",
              "SG",
              "SK",
              "SI",
              "SO",
              "ES",
              "SD",
              "SR",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TN",
              "TR",
              "TM",
              "TV",
              "UG",
              "UA",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "YE",
              "ZM",
              "ZW",
              "AX",
              "AS",
              "BS",
              "BM",
              "BV",
              "KY",
              "CF",
              "CX",
              "KM",
              "CK",
              "DO",
              "GQ",
              "FO",
              "GF",
              "PF",
              "VA",
              "IM",
              "KP",
              "KR",
              "MH",
              "NC",
              "NZ",
              "NF",
              "SA",
              "SC",
              "SB",
              "ZA",
              "SS",
              "GB",
              "EH",
              "AG",
              "BA",
              "TF",
              "MP",
              "TT",
              "AE",
              "US",
              "WF",
              "TC",
              "UM",
              "IO",
              "HM",
              "GS",
              "VG",
              "VI",
              "MF",
              "SX",
              "SJ",
              "CD",
              "FM",
              "CC",
              "FK",
              "SH",
              "SM",
              "PS",
              "BQ",
              "BF",
              "CV",
              "CR",
              "GW",
              "PR",
              "BL",
              "LC",
              "SL",
              "LK",
              "TL",
              "PG",
              "KN",
              "PM",
              "VC",
              "ST",
              "CI"
            ]
          },
          "maxItems": 249
        },
        "sip_name": {
          "title": "Sip name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "sip_tvgid": {
          "title": "Sip tvgid",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "ott_name": {
          "title": "Ott name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "ott_tvgid": {
          "title": "Ott tvgid",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        }
      }
    },
    "AdminCreateChannel": {
      "required": ["group_id", "name", "disabled_countries"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "group_name": {
          "title": "Group name",
          "type": "string",
          "readOnly": true
        },
        "group_id": {
          "title": "Group id",
          "type": "integer"
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "csv_channel_id": {
          "title": "Csv channel id",
          "type": "integer",
          "readOnly": true
        },
        "csv_group_id": {
          "title": "Csv group id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "name_translit": {
          "title": "Name Translit",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "minLength": 1
        },
        "tvg_logo": {
          "title": "Tvg logo",
          "type": "string",
          "maxLength": 20,
          "x-nullable": true
        },
        "mode": {
          "title": "Mode",
          "type": "string",
          "maxLength": 20,
          "x-nullable": true
        },
        "sid": {
          "title": "Sid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "tsid": {
          "title": "Tsid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "onid": {
          "title": "Onid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "ns": {
          "title": "Ns",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "external_id": {
          "title": "External id",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "is_hidden": {
          "title": "Скрытый",
          "type": "boolean"
        },
        "is_archived": {
          "title": "Архив",
          "type": "boolean"
        },
        "ordering_id": {
          "title": "Position",
          "type": "number"
        },
        "disabled_countries": {
          "type": "array",
          "items": {
            "title": "Заблокированные страны",
            "type": "string",
            "enum": [
              "AF",
              "AL",
              "DZ",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BT",
              "BO",
              "BW",
              "BR",
              "BN",
              "BG",
              "BI",
              "KH",
              "CM",
              "CA",
              "TD",
              "CL",
              "CN",
              "CO",
              "CG",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "EC",
              "EG",
              "SV",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FJ",
              "FI",
              "FR",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GY",
              "HT",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NI",
              "NE",
              "NG",
              "NU",
              "MK",
              "NO",
              "OM",
              "PK",
              "PW",
              "PA",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "WS",
              "SN",
              "RS",
              "SG",
              "SK",
              "SI",
              "SO",
              "ES",
              "SD",
              "SR",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TN",
              "TR",
              "TM",
              "TV",
              "UG",
              "UA",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "YE",
              "ZM",
              "ZW",
              "AX",
              "AS",
              "BS",
              "BM",
              "BV",
              "KY",
              "CF",
              "CX",
              "KM",
              "CK",
              "DO",
              "GQ",
              "FO",
              "GF",
              "PF",
              "VA",
              "IM",
              "KP",
              "KR",
              "MH",
              "NC",
              "NZ",
              "NF",
              "SA",
              "SC",
              "SB",
              "ZA",
              "SS",
              "GB",
              "EH",
              "AG",
              "BA",
              "TF",
              "MP",
              "TT",
              "AE",
              "US",
              "WF",
              "TC",
              "UM",
              "IO",
              "HM",
              "GS",
              "VG",
              "VI",
              "MF",
              "SX",
              "SJ",
              "CD",
              "FM",
              "CC",
              "FK",
              "SH",
              "SM",
              "PS",
              "BQ",
              "BF",
              "CV",
              "CR",
              "GW",
              "PR",
              "BL",
              "LC",
              "SL",
              "LK",
              "TL",
              "PG",
              "KN",
              "PM",
              "VC",
              "ST",
              "CI"
            ]
          },
          "maxItems": 249
        },
        "sip_name": {
          "title": "Sip name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "sip_tvgid": {
          "title": "Sip tvgid",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "ott_name": {
          "title": "Ott name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "ott_tvgid": {
          "title": "Ott tvgid",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        }
      }
    },
    "AdminUpdateChannel": {
      "required": ["name", "disabled_countries"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "group_name": {
          "title": "Group name",
          "type": "string",
          "readOnly": true
        },
        "group_id": {
          "title": "Group id",
          "type": "integer"
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "csv_channel_id": {
          "title": "Csv channel id",
          "type": "integer",
          "readOnly": true
        },
        "csv_group_id": {
          "title": "Csv group id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "name_translit": {
          "title": "Name Translit",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "minLength": 1
        },
        "tvg_logo": {
          "title": "Tvg logo",
          "type": "string",
          "maxLength": 20,
          "x-nullable": true
        },
        "mode": {
          "title": "Mode",
          "type": "string",
          "maxLength": 20,
          "x-nullable": true
        },
        "sid": {
          "title": "Sid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "tsid": {
          "title": "Tsid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "onid": {
          "title": "Onid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "ns": {
          "title": "Ns",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "external_id": {
          "title": "External id",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "is_hidden": {
          "title": "Скрытый",
          "type": "boolean"
        },
        "is_archived": {
          "title": "Архив",
          "type": "boolean"
        },
        "ordering_id": {
          "title": "Position",
          "type": "number"
        },
        "disabled_countries": {
          "type": "array",
          "items": {
            "title": "Заблокированные страны",
            "type": "string",
            "enum": [
              "AF",
              "AL",
              "DZ",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BT",
              "BO",
              "BW",
              "BR",
              "BN",
              "BG",
              "BI",
              "KH",
              "CM",
              "CA",
              "TD",
              "CL",
              "CN",
              "CO",
              "CG",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "EC",
              "EG",
              "SV",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FJ",
              "FI",
              "FR",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GY",
              "HT",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NI",
              "NE",
              "NG",
              "NU",
              "MK",
              "NO",
              "OM",
              "PK",
              "PW",
              "PA",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "WS",
              "SN",
              "RS",
              "SG",
              "SK",
              "SI",
              "SO",
              "ES",
              "SD",
              "SR",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TN",
              "TR",
              "TM",
              "TV",
              "UG",
              "UA",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "YE",
              "ZM",
              "ZW",
              "AX",
              "AS",
              "BS",
              "BM",
              "BV",
              "KY",
              "CF",
              "CX",
              "KM",
              "CK",
              "DO",
              "GQ",
              "FO",
              "GF",
              "PF",
              "VA",
              "IM",
              "KP",
              "KR",
              "MH",
              "NC",
              "NZ",
              "NF",
              "SA",
              "SC",
              "SB",
              "ZA",
              "SS",
              "GB",
              "EH",
              "AG",
              "BA",
              "TF",
              "MP",
              "TT",
              "AE",
              "US",
              "WF",
              "TC",
              "UM",
              "IO",
              "HM",
              "GS",
              "VG",
              "VI",
              "MF",
              "SX",
              "SJ",
              "CD",
              "FM",
              "CC",
              "FK",
              "SH",
              "SM",
              "PS",
              "BQ",
              "BF",
              "CV",
              "CR",
              "GW",
              "PR",
              "BL",
              "LC",
              "SL",
              "LK",
              "TL",
              "PG",
              "KN",
              "PM",
              "VC",
              "ST",
              "CI"
            ]
          },
          "maxItems": 249
        },
        "sip_name": {
          "title": "Sip name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "sip_tvgid": {
          "title": "Sip tvgid",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "ott_name": {
          "title": "Ott name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "ott_tvgid": {
          "title": "Ott tvgid",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        }
      }
    },
    "ChannelDragNDrop": {
      "required": ["prev_channel_id"],
      "type": "object",
      "properties": {
        "prev_channel_id": {
          "title": "Prev channel id",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "PlaylistType": {
      "required": ["name", "description"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "readOnly": true
        },
        "download_url": {
          "title": "Download url",
          "type": "string",
          "readOnly": true
        },
        "epg_urls": {
          "title": "Epg urls",
          "type": "string",
          "readOnly": true
        },
        "epg_lite_urls": {
          "title": "Epg lite urls",
          "type": "string",
          "readOnly": true
        },
        "picon_urls": {
          "title": "Picon urls",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "format_name": {
          "title": "Format name",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "file_name": {
          "title": "File name",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "is_archived": {
          "title": "Archived",
          "type": "boolean"
        },
        "is_mediateka": {
          "title": "Mediateka",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "minLength": 1
        },
        "description_url": {
          "title": "Description url",
          "type": "string",
          "format": "uri",
          "maxLength": 300,
          "x-nullable": true
        }
      }
    },
    "PlaylistOS": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "playlist_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlaylistType"
          },
          "readOnly": true
        }
      }
    },
    "Channel": {
      "required": ["name", "disabled_countries"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "group_name": {
          "title": "Group name",
          "type": "string",
          "minLength": 1
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "csv_channel_id": {
          "title": "Csv channel id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "csv_group_id": {
          "title": "Csv group id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "name_translit": {
          "title": "Name Translit",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "minLength": 1
        },
        "tvg_logo": {
          "title": "Tvg logo",
          "type": "string",
          "maxLength": 20,
          "x-nullable": true
        },
        "mode": {
          "title": "Mode",
          "type": "string",
          "maxLength": 20,
          "x-nullable": true
        },
        "sid": {
          "title": "Sid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "tsid": {
          "title": "Tsid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "onid": {
          "title": "Onid",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "ns": {
          "title": "Ns",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "external_id": {
          "title": "External id",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "is_hidden": {
          "title": "Скрытый",
          "type": "boolean"
        },
        "is_archived": {
          "title": "Архив",
          "type": "boolean"
        },
        "ordering_id": {
          "title": "Position",
          "type": "number"
        },
        "disabled_countries": {
          "type": "array",
          "items": {
            "title": "Заблокированные страны",
            "type": "string",
            "enum": [
              "AF",
              "AL",
              "DZ",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BT",
              "BO",
              "BW",
              "BR",
              "BN",
              "BG",
              "BI",
              "KH",
              "CM",
              "CA",
              "TD",
              "CL",
              "CN",
              "CO",
              "CG",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "EC",
              "EG",
              "SV",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FJ",
              "FI",
              "FR",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GY",
              "HT",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NI",
              "NE",
              "NG",
              "NU",
              "MK",
              "NO",
              "OM",
              "PK",
              "PW",
              "PA",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "WS",
              "SN",
              "RS",
              "SG",
              "SK",
              "SI",
              "SO",
              "ES",
              "SD",
              "SR",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TN",
              "TR",
              "TM",
              "TV",
              "UG",
              "UA",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "YE",
              "ZM",
              "ZW",
              "AX",
              "AS",
              "BS",
              "BM",
              "BV",
              "KY",
              "CF",
              "CX",
              "KM",
              "CK",
              "DO",
              "GQ",
              "FO",
              "GF",
              "PF",
              "VA",
              "IM",
              "KP",
              "KR",
              "MH",
              "NC",
              "NZ",
              "NF",
              "SA",
              "SC",
              "SB",
              "ZA",
              "SS",
              "GB",
              "EH",
              "AG",
              "BA",
              "TF",
              "MP",
              "TT",
              "AE",
              "US",
              "WF",
              "TC",
              "UM",
              "IO",
              "HM",
              "GS",
              "VG",
              "VI",
              "MF",
              "SX",
              "SJ",
              "CD",
              "FM",
              "CC",
              "FK",
              "SH",
              "SM",
              "PS",
              "BQ",
              "BF",
              "CV",
              "CR",
              "GW",
              "PR",
              "BL",
              "LC",
              "SL",
              "LK",
              "TL",
              "PG",
              "KN",
              "PM",
              "VC",
              "ST",
              "CI"
            ]
          },
          "maxItems": 249
        },
        "sip_name": {
          "title": "Sip name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "sip_tvgid": {
          "title": "Sip tvgid",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "ott_name": {
          "title": "Ott name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "ott_tvgid": {
          "title": "Ott tvgid",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        }
      }
    },
    "Playlist": {
      "required": ["title"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "is_default": {
          "title": "Default playlist",
          "type": "boolean"
        }
      }
    },
    "CreatePlaylist": {
      "required": ["title"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "is_default": {
          "title": "Default playlist",
          "type": "boolean"
        },
        "is_hidden": {
          "title": "Is hidden",
          "type": "boolean",
          "default": false
        }
      }
    },
    "PlaylistBindDevice": {
      "type": "object",
      "properties": {
        "devices": {
          "title": "Devices",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ChannelGroup": {
      "required": ["name", "playlist"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "channels_count": {
          "title": "Channels count",
          "type": "integer",
          "readOnly": true
        },
        "count_selected": {
          "title": "Count selected",
          "type": "integer",
          "readOnly": true
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "csv_group_id": {
          "title": "Csv group id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "is_hidden": {
          "title": "Is hidden",
          "type": "boolean"
        },
        "ordering_id": {
          "title": "Position",
          "type": "number"
        },
        "playlist": {
          "title": "Playlist",
          "type": "integer"
        }
      }
    },
    "HideChannelGroupOnPlaylist": {
      "type": "object",
      "properties": {
        "is_hidden": {
          "title": "Is hidden",
          "type": "boolean"
        }
      }
    },
    "PlaylistGroupChannelDragNDrop": {
      "type": "object",
      "properties": {
        "prev_channel_id": {
          "title": "Prev channel id",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "HideChannelOnPlaylistChannelGroup": {
      "type": "object",
      "properties": {
        "is_hidden": {
          "title": "Hidden status",
          "type": "boolean"
        }
      }
    },
    "PlaylistGroupChannelMove": {
      "required": ["group"],
      "type": "object",
      "properties": {
        "group": {
          "title": "PlaylistGroup",
          "type": "integer"
        }
      }
    },
    "ChannelGroupAndChannels": {
      "required": ["name", "playlist"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "channels_count": {
          "title": "Channels count",
          "type": "integer",
          "readOnly": true
        },
        "count_selected": {
          "title": "Count selected",
          "type": "integer",
          "readOnly": true
        },
        "channels": {
          "title": "Channels",
          "type": "string",
          "readOnly": true
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "csv_group_id": {
          "title": "Csv group id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "is_hidden": {
          "title": "Is hidden",
          "type": "boolean"
        },
        "ordering_id": {
          "title": "Position",
          "type": "number"
        },
        "playlist": {
          "title": "Playlist",
          "type": "integer"
        }
      }
    },
    "ChannelGroupUpdate": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "PlaylistDragNDropGroup": {
      "type": "object",
      "properties": {
        "prev_group_id": {
          "title": "Prev group id",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "NewsImage": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "image": {
          "title": "Изображение",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "news": {
          "title": "News",
          "type": "integer",
          "x-nullable": true
        },
        "tmp_news_id": {
          "title": "Temporary news id",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        }
      }
    },
    "NewsList": {
      "required": ["title"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "short_text": {
          "title": "Short text",
          "type": "string",
          "x-nullable": true
        },
        "created_date": {
          "title": "Created date",
          "type": "string",
          "format": "date",
          "readOnly": true
        }
      }
    },
    "NewsCreate": {
      "required": ["title", "text", "country"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_date": {
          "title": "Created date",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "short_text": {
          "title": "Short text",
          "type": "string",
          "x-nullable": true
        },
        "text": {
          "title": "Текст",
          "type": "string",
          "minLength": 1
        },
        "link": {
          "title": "Link",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "date_end": {
          "title": "Date end",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "is_country": {
          "title": "Does it filter by countries",
          "type": "boolean"
        },
        "country": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AF",
              "AL",
              "DZ",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BT",
              "BO",
              "BW",
              "BR",
              "BN",
              "BG",
              "BI",
              "KH",
              "CM",
              "CA",
              "TD",
              "CL",
              "CN",
              "CO",
              "CG",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "EC",
              "EG",
              "SV",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FJ",
              "FI",
              "FR",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GY",
              "HT",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NI",
              "NE",
              "NG",
              "NU",
              "MK",
              "NO",
              "OM",
              "PK",
              "PW",
              "PA",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "WS",
              "SN",
              "RS",
              "SG",
              "SK",
              "SI",
              "SO",
              "ES",
              "SD",
              "SR",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TN",
              "TR",
              "TM",
              "TV",
              "UG",
              "UA",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "YE",
              "ZM",
              "ZW",
              "AX",
              "AS",
              "BS",
              "BM",
              "BV",
              "KY",
              "CF",
              "CX",
              "KM",
              "CK",
              "DO",
              "GQ",
              "FO",
              "GF",
              "PF",
              "VA",
              "IM",
              "KP",
              "KR",
              "MH",
              "NC",
              "NZ",
              "NF",
              "SA",
              "SC",
              "SB",
              "ZA",
              "SS",
              "GB",
              "EH",
              "AG",
              "BA",
              "TF",
              "MP",
              "TT",
              "AE",
              "US",
              "WF",
              "TC",
              "UM",
              "IO",
              "HM",
              "GS",
              "VG",
              "VI",
              "MF",
              "SX",
              "SJ",
              "CD",
              "FM",
              "CC",
              "FK",
              "SH",
              "SM",
              "PS",
              "BQ",
              "BF",
              "CV",
              "CR",
              "GW",
              "PR",
              "BL",
              "LC",
              "SL",
              "LK",
              "TL",
              "PG",
              "KN",
              "PM",
              "VC",
              "ST",
              "CI"
            ]
          },
          "maxItems": 249
        },
        "is_news_pages": {
          "title": "Is news pages",
          "type": "boolean"
        },
        "is_pushes": {
          "title": "Is pushes",
          "type": "boolean"
        },
        "is_send_email": {
          "title": "Is send email",
          "type": "boolean"
        },
        "tmp_news_id": {
          "title": "Tmp news id",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        }
      }
    },
    "NewsDetail": {
      "required": ["title", "text", "country"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_date": {
          "title": "Created date",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "short_text": {
          "title": "Short text",
          "type": "string",
          "x-nullable": true
        },
        "text": {
          "title": "Текст",
          "type": "string",
          "minLength": 1
        },
        "link": {
          "title": "Link",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "date_end": {
          "title": "Date end",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "is_country": {
          "title": "Does it filter by countries",
          "type": "boolean"
        },
        "country": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AF",
              "AL",
              "DZ",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BT",
              "BO",
              "BW",
              "BR",
              "BN",
              "BG",
              "BI",
              "KH",
              "CM",
              "CA",
              "TD",
              "CL",
              "CN",
              "CO",
              "CG",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "EC",
              "EG",
              "SV",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FJ",
              "FI",
              "FR",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GY",
              "HT",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NI",
              "NE",
              "NG",
              "NU",
              "MK",
              "NO",
              "OM",
              "PK",
              "PW",
              "PA",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "WS",
              "SN",
              "RS",
              "SG",
              "SK",
              "SI",
              "SO",
              "ES",
              "SD",
              "SR",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TN",
              "TR",
              "TM",
              "TV",
              "UG",
              "UA",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "YE",
              "ZM",
              "ZW",
              "AX",
              "AS",
              "BS",
              "BM",
              "BV",
              "KY",
              "CF",
              "CX",
              "KM",
              "CK",
              "DO",
              "GQ",
              "FO",
              "GF",
              "PF",
              "VA",
              "IM",
              "KP",
              "KR",
              "MH",
              "NC",
              "NZ",
              "NF",
              "SA",
              "SC",
              "SB",
              "ZA",
              "SS",
              "GB",
              "EH",
              "AG",
              "BA",
              "TF",
              "MP",
              "TT",
              "AE",
              "US",
              "WF",
              "TC",
              "UM",
              "IO",
              "HM",
              "GS",
              "VG",
              "VI",
              "MF",
              "SX",
              "SJ",
              "CD",
              "FM",
              "CC",
              "FK",
              "SH",
              "SM",
              "PS",
              "BQ",
              "BF",
              "CV",
              "CR",
              "GW",
              "PR",
              "BL",
              "LC",
              "SL",
              "LK",
              "TL",
              "PG",
              "KN",
              "PM",
              "VC",
              "ST",
              "CI"
            ]
          },
          "maxItems": 249
        },
        "is_news_pages": {
          "title": "Is news pages",
          "type": "boolean"
        },
        "is_pushes": {
          "title": "Is pushes",
          "type": "boolean"
        },
        "is_send_email": {
          "title": "Is send email",
          "type": "boolean"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewsImage"
          },
          "readOnly": true
        }
      }
    },
    "CreateOrder": {
      "required": ["device_ids", "days_amount", "is_premium", "is_auto_renew"],
      "type": "object",
      "properties": {
        "device_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "days_amount": {
          "title": "Days amount",
          "type": "integer",
          "maximum": 360,
          "minimum": 30
        },
        "is_premium": {
          "title": "Is premium",
          "type": "boolean",
          "x-nullable": true
        },
        "is_auto_renew": {
          "title": "Is auto renew",
          "type": "boolean",
          "x-nullable": true
        },
        "promocode_transaction_id": {
          "title": "Promocode transaction id",
          "type": "integer",
          "x-nullable": true
        },
        "force": {
          "title": "Force",
          "type": "boolean",
          "default": false
        },
        "date_alignment": {
          "title": "Date alignment",
          "type": "boolean",
          "default": false
        }
      }
    },
    "AdminGroup": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "menu_items": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "AdminGroupCreate": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "menu_items": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "AdminGroupUser": {
      "required": ["group"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/UserShort"
        },
        "dt_create": {
          "title": "Created time",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "group": {
          "title": "Group",
          "type": "integer"
        }
      }
    },
    "AdminGroupUserCreate": {
      "required": ["email"],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "AdminMenuItem": {
      "required": ["code", "name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "code": {
          "title": "Code",
          "type": "string",
          "maxLength": 150,
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "is_hidden": {
          "title": "Hidden?",
          "type": "boolean"
        }
      }
    },
    "DNS": {
      "required": ["user_id", "domain_id", "server_id", "dns"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user_id": {
          "title": "User id",
          "type": "integer"
        },
        "domain_id": {
          "title": "Domain id",
          "type": "integer"
        },
        "server_id": {
          "title": "Server id",
          "type": "integer"
        },
        "dns": {
          "title": "DNS",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "dns_full": {
          "title": "Dns full",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DomainResponse": {
      "required": ["name", "url"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "url": {
          "title": "Url",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "dns_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DNS"
          },
          "readOnly": true
        }
      }
    },
    "Domain": {
      "required": ["name", "url"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "url": {
          "title": "Url",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "MinistraServer": {
      "required": ["title", "dns", "web_login", "web_password"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "aura_url": {
          "title": "Aura url",
          "type": "string",
          "readOnly": true
        },
        "mag_url": {
          "title": "Mag url",
          "type": "string",
          "readOnly": true
        },
        "android_url": {
          "title": "Android url",
          "type": "string",
          "readOnly": true
        },
        "stalker_url": {
          "title": "Stalker url",
          "type": "string",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "dns": {
          "title": "Dns",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "web_login": {
          "title": "Web login",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "web_password": {
          "title": "Web password",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "custom_api_url": {
          "title": "Custom api url",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "custom_api_secret": {
          "title": "Custom api secret",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "version": {
          "title": "Version",
          "type": "string",
          "enum": ["v5.3", "v5.6"]
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        },
        "streaming_server_dns": {
          "title": "Streaming server dns",
          "type": "string",
          "maxLength": 150,
          "minLength": 1
        },
        "streaming_server_archive_days": {
          "title": "Number of archive days",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "dt_last_synchronization": {
          "title": "Last synchronization time",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "Promocode": {
      "required": ["code"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "promocode_type": {
          "title": "Promo code type",
          "type": "string",
          "enum": ["amount", "percent"]
        },
        "code": {
          "title": "Code",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "discount": {
          "title": "Discount",
          "type": "number",
          "format": "decimal"
        },
        "max_transactions": {
          "title": "Number of transactions",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "dt_expire": {
          "title": "Expired at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "count_transactions": {
          "title": "Count transactions",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PromocodeCreate": {
      "required": ["code", "max_transactions"],
      "type": "object",
      "properties": {
        "promocode_type": {
          "title": "Promo code type",
          "type": "string",
          "enum": ["amount", "percent"]
        },
        "code": {
          "title": "Code",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "discount": {
          "title": "Discount",
          "type": "number",
          "format": "decimal"
        },
        "max_transactions": {
          "title": "Max transactions",
          "type": "integer",
          "minimum": 0
        },
        "dt_expire": {
          "title": "Expired at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "PromocodeTransaction": {
      "required": ["user", "promocode"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/UserShort"
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "price": {
          "title": "Price",
          "type": "number",
          "format": "decimal"
        },
        "discount": {
          "title": "Discount",
          "type": "number",
          "format": "decimal"
        },
        "is_blocked": {
          "title": "Is blocked",
          "type": "boolean"
        },
        "dt_activate": {
          "title": "Activated at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "promocode": {
          "title": "Promocode",
          "type": "integer"
        },
        "order": {
          "title": "Порядок",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "Server": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255
        },
        "dns": {
          "title": "DNS",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "kind": {
          "title": "Server type",
          "description": "Playlist or Portal",
          "type": "string",
          "enum": ["portal", "playlist"]
        },
        "manual_disable_sale": {
          "title": "Manual disable sale",
          "type": "boolean"
        },
        "mbfs": {
          "title": "Manually block for sale",
          "type": "boolean"
        },
        "archive_days": {
          "title": "Number of archive days",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "speedtest_download": {
          "title": "Speedtest download",
          "type": "string",
          "maxLength": 255
        },
        "speedtest_ping": {
          "title": "Speedtest ping",
          "type": "string",
          "maxLength": 255
        },
        "speedtest_dns": {
          "title": "Speedtest dns",
          "type": "string",
          "maxLength": 255
        },
        "is_virtual": {
          "title": "Virtual status",
          "type": "boolean"
        }
      }
    },
    "PromocodeApply": {
      "required": ["code"],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserServer": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "dns": {
          "title": "DNS",
          "type": "string",
          "maxLength": 255
        },
        "kind": {
          "title": "Server type",
          "description": "Playlist or Portal",
          "type": "string",
          "enum": ["portal", "playlist"]
        },
        "manual_disable_sale": {
          "title": "Manual disable sale",
          "type": "boolean"
        },
        "mbfs": {
          "title": "Manually block for sale",
          "type": "boolean"
        },
        "archive_days": {
          "title": "Number of archive days",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "speedtest_download": {
          "title": "Speedtest download",
          "type": "string",
          "maxLength": 255
        },
        "speedtest_ping": {
          "title": "Speedtest ping",
          "type": "string",
          "maxLength": 255
        },
        "speedtest_dns": {
          "title": "Speedtest dns",
          "type": "string",
          "maxLength": 255
        },
        "is_virtual": {
          "title": "Virtual status",
          "type": "boolean"
        }
      }
    },
    "AdminUserList": {
      "required": ["username", "country"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "Имя пользователя",
          "description": "Обязательное поле. Не более 150 символов. Только буквы, цифры и символы @/./+/-/_.",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150,
          "minLength": 1
        },
        "email": {
          "title": "Email адрес",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "date_joined": {
          "title": "Дата регистрации",
          "type": "string",
          "format": "date-time"
        },
        "is_active": {
          "title": "Активный",
          "description": "Отметьте, если пользователь должен считаться активным. Уберите эту отметку вместо удаления учётной записи.",
          "type": "boolean"
        },
        "country": {
          "title": "Country",
          "type": "string",
          "enum": [
            "AF",
            "AL",
            "DZ",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BT",
            "BO",
            "BW",
            "BR",
            "BN",
            "BG",
            "BI",
            "KH",
            "CM",
            "CA",
            "TD",
            "CL",
            "CN",
            "CO",
            "CG",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "DK",
            "DJ",
            "DM",
            "EC",
            "EG",
            "SV",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FJ",
            "FI",
            "FR",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GY",
            "HT",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NI",
            "NE",
            "NG",
            "NU",
            "MK",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "WS",
            "SN",
            "RS",
            "SG",
            "SK",
            "SI",
            "SO",
            "ES",
            "SD",
            "SR",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TG",
            "TK",
            "TO",
            "TN",
            "TR",
            "TM",
            "TV",
            "UG",
            "UA",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "YE",
            "ZM",
            "ZW",
            "AX",
            "AS",
            "BS",
            "BM",
            "BV",
            "KY",
            "CF",
            "CX",
            "KM",
            "CK",
            "DO",
            "GQ",
            "FO",
            "GF",
            "PF",
            "VA",
            "IM",
            "KP",
            "KR",
            "MH",
            "NC",
            "NZ",
            "NF",
            "SA",
            "SC",
            "SB",
            "ZA",
            "SS",
            "GB",
            "EH",
            "AG",
            "BA",
            "TF",
            "MP",
            "TT",
            "AE",
            "US",
            "WF",
            "TC",
            "UM",
            "IO",
            "HM",
            "GS",
            "VG",
            "VI",
            "MF",
            "SX",
            "SJ",
            "CD",
            "FM",
            "CC",
            "FK",
            "SH",
            "SM",
            "PS",
            "BQ",
            "BF",
            "CV",
            "CR",
            "GW",
            "PR",
            "BL",
            "LC",
            "SL",
            "LK",
            "TL",
            "PG",
            "KN",
            "PM",
            "VC",
            "ST",
            "CI"
          ]
        },
        "balance": {
          "title": "Balance",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "block_actual": {
          "title": "Block actual",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AdminUser": {
      "required": ["username", "country", "timezone"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "Имя пользователя",
          "description": "Обязательное поле. Не более 150 символов. Только буквы, цифры и символы @/./+/-/_.",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150,
          "minLength": 1
        },
        "last_login": {
          "title": "Дата последнего входа в систему",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "first_name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 30
        },
        "last_name": {
          "title": "Фамилия",
          "type": "string",
          "maxLength": 150
        },
        "email": {
          "title": "Email адрес",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "date_joined": {
          "title": "Дата регистрации",
          "type": "string",
          "format": "date-time"
        },
        "is_active": {
          "title": "Активный",
          "description": "Отметьте, если пользователь должен считаться активным. Уберите эту отметку вместо удаления учётной записи.",
          "type": "boolean"
        },
        "is_staff": {
          "title": "Статус персонала",
          "description": "Отметьте, если пользователь может входить в административную часть сайта.",
          "type": "boolean"
        },
        "is_superuser": {
          "title": "Статус суперпользователя",
          "description": "Указывает, что пользователь имеет все права без явного их назначения.",
          "type": "boolean"
        },
        "is_system_events_notifications": {
          "title": "Notify about system events",
          "type": "boolean"
        },
        "is_balance_notifications": {
          "title": "Balance notifications",
          "type": "boolean"
        },
        "is_get_news_notifications": {
          "title": "Get news notifications",
          "type": "boolean"
        },
        "is_notify_subscription_expiration": {
          "title": "Notify about subscription expiration",
          "type": "boolean"
        },
        "is_referral_notifications": {
          "title": "Referral notifications",
          "type": "boolean"
        },
        "is_subscribe_mail_list": {
          "title": "Subscribe to mail list",
          "type": "boolean"
        },
        "is_balance_replenishment_disable": {
          "title": "Balance replenishment disable",
          "type": "boolean"
        },
        "is_balance_replenishment_with_bonus_disable": {
          "title": "Balance replenishment with bonus disable",
          "type": "boolean"
        },
        "personal_discount_percent": {
          "title": "Personal discount percent",
          "type": "number",
          "format": "decimal"
        },
        "personal_bonus_percent": {
          "title": "Personal bonus percent",
          "type": "number",
          "format": "decimal"
        },
        "country": {
          "title": "Country",
          "type": "string",
          "enum": [
            "AF",
            "AL",
            "DZ",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BT",
            "BO",
            "BW",
            "BR",
            "BN",
            "BG",
            "BI",
            "KH",
            "CM",
            "CA",
            "TD",
            "CL",
            "CN",
            "CO",
            "CG",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "DK",
            "DJ",
            "DM",
            "EC",
            "EG",
            "SV",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FJ",
            "FI",
            "FR",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GY",
            "HT",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NI",
            "NE",
            "NG",
            "NU",
            "MK",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "WS",
            "SN",
            "RS",
            "SG",
            "SK",
            "SI",
            "SO",
            "ES",
            "SD",
            "SR",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TG",
            "TK",
            "TO",
            "TN",
            "TR",
            "TM",
            "TV",
            "UG",
            "UA",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "YE",
            "ZM",
            "ZW",
            "AX",
            "AS",
            "BS",
            "BM",
            "BV",
            "KY",
            "CF",
            "CX",
            "KM",
            "CK",
            "DO",
            "GQ",
            "FO",
            "GF",
            "PF",
            "VA",
            "IM",
            "KP",
            "KR",
            "MH",
            "NC",
            "NZ",
            "NF",
            "SA",
            "SC",
            "SB",
            "ZA",
            "SS",
            "GB",
            "EH",
            "AG",
            "BA",
            "TF",
            "MP",
            "TT",
            "AE",
            "US",
            "WF",
            "TC",
            "UM",
            "IO",
            "HM",
            "GS",
            "VG",
            "VI",
            "MF",
            "SX",
            "SJ",
            "CD",
            "FM",
            "CC",
            "FK",
            "SH",
            "SM",
            "PS",
            "BQ",
            "BF",
            "CV",
            "CR",
            "GW",
            "PR",
            "BL",
            "LC",
            "SL",
            "LK",
            "TL",
            "PG",
            "KN",
            "PM",
            "VC",
            "ST",
            "CI"
          ]
        },
        "timezone": {
          "title": "Timezone",
          "type": "string"
        },
        "frontend_language": {
          "title": "Frontend language",
          "type": "string",
          "maxLength": 10,
          "x-nullable": true
        },
        "balance": {
          "title": "Balance",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "register_referral_link": {
          "title": "Register referral link",
          "type": "string",
          "readOnly": true
        },
        "admin_group_ids": {
          "title": "Admin group ids",
          "type": "integer",
          "readOnly": true
        },
        "user_payment_systems": {
          "title": "User payment systems",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AdminUpdateUser": {
      "required": ["password", "country", "admin_group_ids", "user_payment_systems"],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email адрес",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "password": {
          "title": "Пароль",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "country": {
          "title": "Country",
          "type": "string",
          "enum": [
            "AF",
            "AL",
            "DZ",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BT",
            "BO",
            "BW",
            "BR",
            "BN",
            "BG",
            "BI",
            "KH",
            "CM",
            "CA",
            "TD",
            "CL",
            "CN",
            "CO",
            "CG",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "DK",
            "DJ",
            "DM",
            "EC",
            "EG",
            "SV",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FJ",
            "FI",
            "FR",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GY",
            "HT",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NI",
            "NE",
            "NG",
            "NU",
            "MK",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "WS",
            "SN",
            "RS",
            "SG",
            "SK",
            "SI",
            "SO",
            "ES",
            "SD",
            "SR",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TG",
            "TK",
            "TO",
            "TN",
            "TR",
            "TM",
            "TV",
            "UG",
            "UA",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "YE",
            "ZM",
            "ZW",
            "AX",
            "AS",
            "BS",
            "BM",
            "BV",
            "KY",
            "CF",
            "CX",
            "KM",
            "CK",
            "DO",
            "GQ",
            "FO",
            "GF",
            "PF",
            "VA",
            "IM",
            "KP",
            "KR",
            "MH",
            "NC",
            "NZ",
            "NF",
            "SA",
            "SC",
            "SB",
            "ZA",
            "SS",
            "GB",
            "EH",
            "AG",
            "BA",
            "TF",
            "MP",
            "TT",
            "AE",
            "US",
            "WF",
            "TC",
            "UM",
            "IO",
            "HM",
            "GS",
            "VG",
            "VI",
            "MF",
            "SX",
            "SJ",
            "CD",
            "FM",
            "CC",
            "FK",
            "SH",
            "SM",
            "PS",
            "BQ",
            "BF",
            "CV",
            "CR",
            "GW",
            "PR",
            "BL",
            "LC",
            "SL",
            "LK",
            "TL",
            "PG",
            "KN",
            "PM",
            "VC",
            "ST",
            "CI"
          ]
        },
        "is_balance_replenishment_disable": {
          "title": "Balance replenishment disable",
          "type": "boolean"
        },
        "is_balance_replenishment_with_bonus_disable": {
          "title": "Balance replenishment with bonus disable",
          "type": "boolean"
        },
        "personal_discount_percent": {
          "title": "Personal discount percent",
          "type": "number",
          "format": "decimal"
        },
        "personal_bonus_percent": {
          "title": "Personal bonus percent",
          "type": "number",
          "format": "decimal"
        },
        "admin_group_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "user_payment_systems": {
          "title": "User payment systems",
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      }
    },
    "AdminUserBalanceChange": {
      "required": ["balance", "reason"],
      "type": "object",
      "properties": {
        "balance": {
          "title": "Balance",
          "type": "number"
        },
        "reason": {
          "title": "Reason",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "AdminUserBlock": {
      "required": ["reason"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "reason": {
          "title": "Reason",
          "type": "string",
          "minLength": 1
        },
        "canceled": {
          "title": "Canceled",
          "type": "boolean"
        },
        "cancel_reason": {
          "title": "Cancel reason",
          "type": "string",
          "x-nullable": true
        },
        "block_at": {
          "title": "Block at",
          "type": "string",
          "format": "date"
        },
        "expires_at": {
          "title": "Expires at",
          "type": "string",
          "format": "date",
          "x-nullable": true
        }
      }
    },
    "AdminUserDevice": {
      "required": ["user"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "pk": {
          "title": "Pk",
          "type": "integer",
          "readOnly": true
        },
        "content": {
          "title": "Content",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "default": "Устройство для просмотра",
          "minLength": 1
        },
        "new_device": {
          "title": "New device",
          "type": "boolean"
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "purchase_date": {
          "title": "Purchase date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "renew_subscription": {
          "title": "Renew subscription",
          "type": "boolean"
        },
        "selected": {
          "title": "Selected",
          "type": "boolean"
        },
        "server": {
          "title": "Server",
          "type": "integer",
          "x-nullable": true
        },
        "dns": {
          "title": "DNS",
          "type": "integer",
          "x-nullable": true
        },
        "playlist": {
          "title": "Playlist",
          "type": "integer",
          "x-nullable": true
        },
        "start_date": {
          "title": "Start date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "is_test_period": {
          "title": "Test period",
          "type": "boolean"
        },
        "view_type": {
          "title": "Type of server",
          "type": "string",
          "enum": ["portal", "playlist"]
        },
        "subscription_type": {
          "title": "Subscription type",
          "type": "string",
          "enum": ["active", "inactive", "ending"]
        },
        "user": {
          "title": "Пользователь",
          "type": "integer"
        },
        "vip": {
          "title": "VIP",
          "type": "boolean"
        },
        "ott_id": {
          "title": "Ott id",
          "type": "string",
          "maxLength": 256,
          "x-nullable": true
        },
        "ministra_server": {
          "title": "Ministra server",
          "type": "integer",
          "x-nullable": true
        },
        "ministra_login": {
          "title": "Ministra user login",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "ministra_password": {
          "title": "Ministra user password",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "subscription": {
          "title": "Subscription",
          "type": "string",
          "readOnly": true
        },
        "playlist_type": {
          "title": "Playlist type",
          "type": "integer",
          "x-nullable": true
        },
        "app_pairing_code": {
          "title": "Application pairing code",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "app_hwid": {
          "title": "Application HWID",
          "type": "string",
          "x-nullable": true
        },
        "app_status": {
          "title": "App status",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AdminUserDeviceUpdate": {
      "required": ["server_id", "playlist_id", "ott_id", "view_type", "ministra_server", "ministra_login", "ministra_password"],
      "type": "object",
      "properties": {
        "server_id": {
          "title": "Server id",
          "type": "integer",
          "x-nullable": true
        },
        "playlist_id": {
          "title": "Playlist id",
          "type": "integer",
          "x-nullable": true
        },
        "ott_id": {
          "title": "Ott id",
          "type": "string",
          "minLength": 1
        },
        "view_type": {
          "title": "View type",
          "type": "string",
          "enum": ["portal", "playlist"]
        },
        "ministra_server": {
          "title": "Ministra server",
          "type": "integer",
          "x-nullable": true
        },
        "ministra_login": {
          "title": "Ministra login",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "ministra_password": {
          "title": "Ministra password",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        }
      }
    },
    "AdminUserDeviceSubscriptionCancel": {
      "required": ["future_type", "type"],
      "type": "object",
      "properties": {
        "future_type": {
          "title": "Future type",
          "type": "string",
          "enum": ["only_future", "active_and_future"],
          "x-nullable": true
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": ["refund", "cancel", "all"]
        }
      }
    },
    "AdminUserDeviceSubscriptionChange": {
      "required": ["date_end"],
      "type": "object",
      "properties": {
        "date_end": {
          "title": "Date end",
          "type": "string",
          "format": "date"
        }
      }
    },
    "AdminUserDeviceAddSubscription": {
      "required": ["date_end"],
      "type": "object",
      "properties": {
        "date_end": {
          "title": "Date end",
          "type": "string",
          "format": "date"
        },
        "is_premium": {
          "title": "Is premium",
          "type": "boolean",
          "default": false
        },
        "is_withdraw_from_user_balance": {
          "title": "Is withdraw from user balance",
          "type": "boolean",
          "default": false
        }
      }
    },
    "AdminUserRawPassword": {
      "required": ["decode_pin"],
      "type": "object",
      "properties": {
        "decode_pin": {
          "title": "Decode pin",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Referral": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "Username",
          "type": "string",
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "minLength": 1
        },
        "dt_registration": {
          "title": "Registration time",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "is_verified": {
          "title": "Подтвержден",
          "type": "boolean"
        },
        "referer_url": {
          "title": "Referer URL",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        },
        "payments_percent": {
          "title": "Payments percent",
          "type": "number",
          "format": "decimal"
        },
        "first_replenishment_bonus_percent": {
          "title": "First replenishment bonus percent",
          "type": "number",
          "format": "decimal"
        },
        "dt_end_payments": {
          "title": "Dt end payments",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "ReferralStatistics": {
      "type": "object",
      "properties": {
        "registered_count": {
          "title": "Registered count",
          "type": "integer",
          "readOnly": true
        },
        "replenishment_count": {
          "title": "Replenishment count",
          "type": "integer",
          "readOnly": true
        },
        "replenishment_amount": {
          "title": "Replenishment amount",
          "type": "number",
          "readOnly": true
        },
        "replenishment_avg": {
          "title": "Replenishment avg",
          "type": "number",
          "readOnly": true
        },
        "referral_amount": {
          "title": "Referral amount",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "WithdrawalSystemShort": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Withdrawal system name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "is_disabled": {
          "title": "Disabled?",
          "type": "boolean"
        }
      }
    },
    "WithdrawalTransaction": {
      "required": ["withdrawal_system_user_identifier"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "withdrawal_system": {
          "$ref": "#/definitions/WithdrawalSystemShort"
        },
        "user": {
          "$ref": "#/definitions/UserShort"
        },
        "processed_user": {
          "$ref": "#/definitions/UserShort"
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "enum": ["rub", "eur", "usd"]
        },
        "amount": {
          "title": "Amount",
          "type": "number",
          "format": "decimal"
        },
        "withdrawal_system_user_identifier": {
          "title": "User identifier in withdrawal system",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        },
        "is_transfered": {
          "title": "Transfered?",
          "type": "boolean",
          "x-nullable": true
        },
        "is_error": {
          "title": "Error?",
          "type": "boolean",
          "x-nullable": true
        },
        "error_message": {
          "title": "Error message",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["created", "approved", "rejected"]
        },
        "withdrawal_wallet": {
          "title": "Withdrawal wallet",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "ReferralLinkClickThrough": {
      "required": ["referer_url"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "Username",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["transition", "registration"]
        },
        "referer_url": {
          "title": "Referer URL",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReferralTransaction": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "Username",
          "type": "string",
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "minLength": 1
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "enum": ["rub", "eur", "usd"]
        },
        "amount": {
          "title": "Amount",
          "type": "number",
          "format": "decimal"
        },
        "amount_replenishment": {
          "title": "Amount replenishment",
          "type": "number",
          "format": "decimal"
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AdminUserSendEmail": {
      "required": ["subject", "message"],
      "type": "object",
      "properties": {
        "subject": {
          "title": "Subject",
          "type": "string",
          "minLength": 1
        },
        "message": {
          "title": "Message",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "WithdrawalSystem": {
      "required": ["name", "user_identifier_name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Withdrawal system name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "user_identifier_name": {
          "title": "User identifier name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "user_identifier_regexp": {
          "title": "User identifier validation regular expession",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "user_identifier_example": {
          "title": "User identifier example",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "is_disabled": {
          "title": "Disabled?",
          "type": "boolean"
        }
      }
    },
    "WithdrawalTransactionApprove": {
      "type": "object",
      "properties": {}
    },
    "WithdrawalTransactionReject": {
      "required": ["reason"],
      "type": "object",
      "properties": {
        "reason": {
          "title": "Reason",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserBlock": {
      "required": ["reason", "user"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "reason": {
          "title": "Reason",
          "type": "string",
          "minLength": 1
        },
        "canceled": {
          "title": "Canceled",
          "type": "boolean"
        },
        "cancel_reason": {
          "title": "Cancel reason",
          "type": "string",
          "x-nullable": true
        },
        "block_at": {
          "title": "Block at",
          "type": "string",
          "format": "date"
        },
        "expires_at": {
          "title": "Expires at",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "user": {
          "title": "User",
          "type": "integer"
        }
      }
    },
    "CheckAllDevices": {
      "required": ["condition"],
      "type": "object",
      "properties": {
        "condition": {
          "title": "Condition",
          "type": "boolean"
        }
      }
    },
    "Device": {
      "required": ["user"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "pk": {
          "title": "Pk",
          "type": "integer",
          "readOnly": true
        },
        "content": {
          "title": "Content",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "default": "Устройство для просмотра",
          "minLength": 1
        },
        "new_device": {
          "title": "New device",
          "type": "boolean"
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "purchase_date": {
          "title": "Purchase date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "renew_subscription": {
          "title": "Renew subscription",
          "type": "boolean"
        },
        "selected": {
          "title": "Selected",
          "type": "boolean"
        },
        "server": {
          "title": "Server",
          "type": "integer",
          "x-nullable": true
        },
        "dns": {
          "title": "DNS",
          "type": "integer",
          "x-nullable": true
        },
        "playlist": {
          "title": "Playlist",
          "type": "integer",
          "x-nullable": true
        },
        "start_date": {
          "title": "Start date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "is_test_period": {
          "title": "Test period",
          "type": "boolean"
        },
        "view_type": {
          "title": "Type of server",
          "type": "string",
          "enum": ["portal", "playlist"]
        },
        "subscription_type": {
          "title": "Subscription type",
          "type": "string",
          "enum": ["active", "inactive", "ending"]
        },
        "user": {
          "title": "Пользователь",
          "type": "integer"
        },
        "vip": {
          "title": "VIP",
          "type": "boolean"
        },
        "ott_id": {
          "title": "Ott id",
          "type": "string",
          "maxLength": 256,
          "x-nullable": true
        },
        "ministra_server": {
          "title": "Ministra server",
          "type": "integer",
          "x-nullable": true
        },
        "ministra_login": {
          "title": "Ministra user login",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "ministra_password": {
          "title": "Ministra user password",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "subscription": {
          "title": "Subscription",
          "type": "string",
          "readOnly": true
        },
        "playlist_type": {
          "title": "Playlist type",
          "type": "integer",
          "x-nullable": true
        },
        "app_pairing_code": {
          "title": "Application pairing code",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "app_hwid": {
          "title": "Application HWID",
          "type": "string",
          "x-nullable": true
        },
        "app_status": {
          "title": "App status",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CreateDevice": {
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "default": "Устройство для просмотра",
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string"
        }
      }
    },
    "UpdateDevice": {
      "required": ["user"],
      "type": "object",
      "properties": {
        "content": {
          "title": "Content",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "created_date": {
          "title": "Created date",
          "description": "Show when an entry was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "is_active": {
          "title": "Public",
          "description": "This entry is visible or unvisible for a client part or admin part.",
          "type": "boolean"
        },
        "is_deleted": {
          "title": "Delete status",
          "type": "boolean"
        },
        "modified_date": {
          "title": "Modified date",
          "description": "Show when an entry was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "default": "Устройство для просмотра",
          "minLength": 1
        },
        "new_device": {
          "title": "New device",
          "type": "boolean"
        },
        "order": {
          "title": "Sorting",
          "description": "We usualy order a model in a client and an admin part.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "purchase_date": {
          "title": "Purchase date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "renew_subscription": {
          "title": "Renew subscription",
          "type": "boolean"
        },
        "selected": {
          "title": "Selected",
          "type": "boolean"
        },
        "server": {
          "title": "Server",
          "type": "integer",
          "x-nullable": true
        },
        "playlist": {
          "title": "Playlist",
          "type": "integer",
          "x-nullable": true
        },
        "start_date": {
          "title": "Start date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "is_test_period": {
          "title": "Test period",
          "type": "boolean"
        },
        "subscription_type": {
          "title": "Subscription type",
          "type": "string",
          "enum": ["active", "inactive", "ending"]
        },
        "user": {
          "title": "Пользователь",
          "type": "integer"
        },
        "vip": {
          "title": "VIP",
          "type": "boolean"
        },
        "subscription": {
          "title": "Subscription",
          "type": "string",
          "readOnly": true
        },
        "playlist_type": {
          "title": "Playlist type",
          "type": "integer",
          "x-nullable": true
        },
        "app_pairing_code": {
          "title": "Application pairing code",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "app_hwid": {
          "title": "Application HWID",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "DeviceCheck": {
      "required": ["selected"],
      "type": "object",
      "properties": {
        "selected": {
          "title": "Selected",
          "type": "boolean"
        }
      }
    },
    "DeviceBindDNS": {
      "required": ["dns_id"],
      "type": "object",
      "properties": {
        "dns_id": {
          "title": "Dns id",
          "type": "integer"
        }
      }
    },
    "DeviceBindPlaylistType": {
      "required": ["playlist_type_id"],
      "type": "object",
      "properties": {
        "playlist_type_id": {
          "title": "Playlist type id",
          "type": "integer"
        }
      }
    },
    "DeviceBindServer": {
      "required": ["server_id"],
      "type": "object",
      "properties": {
        "server_id": {
          "title": "Server id",
          "type": "integer"
        }
      }
    },
    "DeviceSubscriptionAutoRenew": {
      "required": ["auto_renew"],
      "type": "object",
      "properties": {
        "auto_renew": {
          "title": "Auto renew",
          "type": "boolean"
        }
      }
    },
    "DeviceSubscriptionToPremium": {
      "type": "object",
      "properties": {
        "force": {
          "title": "Force",
          "type": "boolean",
          "default": false
        }
      }
    },
    "DeviceChangeViewType": {
      "required": ["view_type"],
      "type": "object",
      "properties": {
        "view_type": {
          "title": "View type",
          "type": "string",
          "enum": ["portal", "playlist"]
        },
        "ministra_server": {
          "title": "Ministra server",
          "type": "integer",
          "x-nullable": true
        },
        "ministra_login": {
          "title": "Ministra login",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "ministra_password": {
          "title": "Ministra password",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        }
      }
    },
    "UserFrontendLanguage": {
      "required": ["frontend_language"],
      "type": "object",
      "properties": {
        "frontend_language": {
          "title": "Frontend language",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "User": {
      "required": ["country", "timezone"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "last_login": {
          "title": "Дата последнего входа в систему",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "first_name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 30
        },
        "last_name": {
          "title": "Фамилия",
          "type": "string",
          "maxLength": 150
        },
        "email": {
          "title": "Email адрес",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "date_joined": {
          "title": "Дата регистрации",
          "type": "string",
          "format": "date-time"
        },
        "is_active": {
          "title": "Активный",
          "description": "Отметьте, если пользователь должен считаться активным. Уберите эту отметку вместо удаления учётной записи.",
          "type": "boolean"
        },
        "is_system_events_notifications": {
          "title": "Notify about system events",
          "type": "boolean"
        },
        "is_balance_notifications": {
          "title": "Balance notifications",
          "type": "boolean"
        },
        "is_get_news_notifications": {
          "title": "Get news notifications",
          "type": "boolean"
        },
        "is_notify_subscription_expiration": {
          "title": "Notify about subscription expiration",
          "type": "boolean"
        },
        "is_referral_notifications": {
          "title": "Referral notifications",
          "type": "boolean"
        },
        "is_subscribe_mail_list": {
          "title": "Subscribe to mail list",
          "type": "boolean"
        },
        "personal_discount_percent": {
          "title": "Personal discount percent",
          "type": "number",
          "format": "decimal"
        },
        "personal_bonus_percent": {
          "title": "Personal bonus percent",
          "type": "number",
          "format": "decimal"
        },
        "country": {
          "title": "Country",
          "type": "string",
          "enum": [
            "AF",
            "AL",
            "DZ",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BT",
            "BO",
            "BW",
            "BR",
            "BN",
            "BG",
            "BI",
            "KH",
            "CM",
            "CA",
            "TD",
            "CL",
            "CN",
            "CO",
            "CG",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "DK",
            "DJ",
            "DM",
            "EC",
            "EG",
            "SV",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FJ",
            "FI",
            "FR",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GY",
            "HT",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NI",
            "NE",
            "NG",
            "NU",
            "MK",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "WS",
            "SN",
            "RS",
            "SG",
            "SK",
            "SI",
            "SO",
            "ES",
            "SD",
            "SR",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TG",
            "TK",
            "TO",
            "TN",
            "TR",
            "TM",
            "TV",
            "UG",
            "UA",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "YE",
            "ZM",
            "ZW",
            "AX",
            "AS",
            "BS",
            "BM",
            "BV",
            "KY",
            "CF",
            "CX",
            "KM",
            "CK",
            "DO",
            "GQ",
            "FO",
            "GF",
            "PF",
            "VA",
            "IM",
            "KP",
            "KR",
            "MH",
            "NC",
            "NZ",
            "NF",
            "SA",
            "SC",
            "SB",
            "ZA",
            "SS",
            "GB",
            "EH",
            "AG",
            "BA",
            "TF",
            "MP",
            "TT",
            "AE",
            "US",
            "WF",
            "TC",
            "UM",
            "IO",
            "HM",
            "GS",
            "VG",
            "VI",
            "MF",
            "SX",
            "SJ",
            "CD",
            "FM",
            "CC",
            "FK",
            "SH",
            "SM",
            "PS",
            "BQ",
            "BF",
            "CV",
            "CR",
            "GW",
            "PR",
            "BL",
            "LC",
            "SL",
            "LK",
            "TL",
            "PG",
            "KN",
            "PM",
            "VC",
            "ST",
            "CI"
          ]
        },
        "timezone": {
          "title": "Timezone",
          "type": "string"
        },
        "balance": {
          "title": "Balance",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "readOnly": true
        },
        "referral_link": {
          "title": "Referral link",
          "type": "string",
          "readOnly": true
        },
        "referral_balance": {
          "title": "Referral balance",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "referral_transactions_amount_current_month": {
          "title": "Referral transactions amount current month",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "referral_payments_percent": {
          "title": "Referral payments percent",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "referral_first_replenishment_bonus_percent": {
          "title": "Referral first replenishment bonus percent",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "referral_payments_days": {
          "title": "Referral payments days",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "frontend_language": {
          "title": "Frontend language",
          "type": "string",
          "maxLength": 10,
          "x-nullable": true
        },
        "admin_menu_items": {
          "title": "Admin menu items",
          "type": "string",
          "readOnly": true
        },
        "ip_address": {
          "title": "Ip address",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Notification": {
      "required": ["title", "text", "country"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "priority": {
          "title": "Priority",
          "type": "integer",
          "maximum": 32767,
          "minimum": -32768
        },
        "created_date": {
          "title": "Created date",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "text": {
          "title": "Текст",
          "type": "string",
          "minLength": 1
        },
        "link": {
          "title": "Link",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "is_country": {
          "title": "Does it filter by countries",
          "type": "boolean"
        },
        "country": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AF",
              "AL",
              "DZ",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BT",
              "BO",
              "BW",
              "BR",
              "BN",
              "BG",
              "BI",
              "KH",
              "CM",
              "CA",
              "TD",
              "CL",
              "CN",
              "CO",
              "CG",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "EC",
              "EG",
              "SV",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FJ",
              "FI",
              "FR",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GY",
              "HT",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NI",
              "NE",
              "NG",
              "NU",
              "MK",
              "NO",
              "OM",
              "PK",
              "PW",
              "PA",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "WS",
              "SN",
              "RS",
              "SG",
              "SK",
              "SI",
              "SO",
              "ES",
              "SD",
              "SR",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TN",
              "TR",
              "TM",
              "TV",
              "UG",
              "UA",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "YE",
              "ZM",
              "ZW",
              "AX",
              "AS",
              "BS",
              "BM",
              "BV",
              "KY",
              "CF",
              "CX",
              "KM",
              "CK",
              "DO",
              "GQ",
              "FO",
              "GF",
              "PF",
              "VA",
              "IM",
              "KP",
              "KR",
              "MH",
              "NC",
              "NZ",
              "NF",
              "SA",
              "SC",
              "SB",
              "ZA",
              "SS",
              "GB",
              "EH",
              "AG",
              "BA",
              "TF",
              "MP",
              "TT",
              "AE",
              "US",
              "WF",
              "TC",
              "UM",
              "IO",
              "HM",
              "GS",
              "VG",
              "VI",
              "MF",
              "SX",
              "SJ",
              "CD",
              "FM",
              "CC",
              "FK",
              "SH",
              "SM",
              "PS",
              "BQ",
              "BF",
              "CV",
              "CR",
              "GW",
              "PR",
              "BL",
              "LC",
              "SL",
              "LK",
              "TL",
              "PG",
              "KN",
              "PM",
              "VC",
              "ST",
              "CI"
            ]
          },
          "maxItems": 249
        },
        "date_end": {
          "title": "Date end",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "news": {
          "title": "News",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "PersonalNotification": {
      "required": ["title", "text", "country", "user"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "priority": {
          "title": "Priority",
          "type": "integer",
          "maximum": 32767,
          "minimum": -32768
        },
        "created_date": {
          "title": "Created date",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "text": {
          "title": "Текст",
          "type": "string",
          "minLength": 1
        },
        "link": {
          "title": "Link",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "is_country": {
          "title": "Does it filter by countries",
          "type": "boolean"
        },
        "country": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AF",
              "AL",
              "DZ",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BT",
              "BO",
              "BW",
              "BR",
              "BN",
              "BG",
              "BI",
              "KH",
              "CM",
              "CA",
              "TD",
              "CL",
              "CN",
              "CO",
              "CG",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "EC",
              "EG",
              "SV",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FJ",
              "FI",
              "FR",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GY",
              "HT",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NI",
              "NE",
              "NG",
              "NU",
              "MK",
              "NO",
              "OM",
              "PK",
              "PW",
              "PA",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "WS",
              "SN",
              "RS",
              "SG",
              "SK",
              "SI",
              "SO",
              "ES",
              "SD",
              "SR",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TG",
              "TK",
              "TO",
              "TN",
              "TR",
              "TM",
              "TV",
              "UG",
              "UA",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "YE",
              "ZM",
              "ZW",
              "AX",
              "AS",
              "BS",
              "BM",
              "BV",
              "KY",
              "CF",
              "CX",
              "KM",
              "CK",
              "DO",
              "GQ",
              "FO",
              "GF",
              "PF",
              "VA",
              "IM",
              "KP",
              "KR",
              "MH",
              "NC",
              "NZ",
              "NF",
              "SA",
              "SC",
              "SB",
              "ZA",
              "SS",
              "GB",
              "EH",
              "AG",
              "BA",
              "TF",
              "MP",
              "TT",
              "AE",
              "US",
              "WF",
              "TC",
              "UM",
              "IO",
              "HM",
              "GS",
              "VG",
              "VI",
              "MF",
              "SX",
              "SJ",
              "CD",
              "FM",
              "CC",
              "FK",
              "SH",
              "SM",
              "PS",
              "BQ",
              "BF",
              "CV",
              "CR",
              "GW",
              "PR",
              "BL",
              "LC",
              "SL",
              "LK",
              "TL",
              "PG",
              "KN",
              "PM",
              "VC",
              "ST",
              "CI"
            ]
          },
          "maxItems": 249
        },
        "date_end": {
          "title": "Date end",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "dt_read": {
          "title": "Reading time",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "user": {
          "title": "Recipient",
          "type": "integer"
        }
      }
    },
    "UserProfile": {
      "type": "object",
      "properties": {
        "timezone": {
          "title": "Timezone",
          "type": "string"
        },
        "is_system_events_notifications": {
          "title": "Is system events notifications",
          "type": "boolean"
        },
        "is_balance_notifications": {
          "title": "Is balance notifications",
          "type": "boolean"
        },
        "is_get_news_notifications": {
          "title": "Is get news notifications",
          "type": "boolean"
        },
        "is_notify_subscription_expiration": {
          "title": "Is notify subscription expiration",
          "type": "boolean"
        },
        "is_referral_notifications": {
          "title": "Is referral notifications",
          "type": "boolean"
        },
        "is_subscribe_mail_list": {
          "title": "Is subscribe mail list",
          "type": "boolean"
        }
      }
    },
    "UserProfileChangeEmail": {
      "required": ["token"],
      "type": "object",
      "properties": {
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserProfileChangeEmailRequestNew": {
      "required": ["email", "uid", "token"],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "minLength": 1
        },
        "uid": {
          "title": "Uid",
          "type": "string",
          "minLength": 1
        },
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserProfileDeleteAccount": {
      "required": ["token"],
      "type": "object",
      "properties": {
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserProfileUnsubscribeMailList": {
      "required": ["token"],
      "type": "object",
      "properties": {
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "WithdrawalWallet": {
      "required": ["withdrawal_system_user_identifier"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "withdrawal_system": {
          "$ref": "#/definitions/WithdrawalSystemShort"
        },
        "user": {
          "$ref": "#/definitions/UserShort"
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "enum": ["rub", "eur", "usd"]
        },
        "withdrawal_system_user_identifier": {
          "title": "User identifier in withdrawal system",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "dt_create": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "dt_update": {
          "title": "Update at",
          "type": "string",
          "format": "date-time"
        },
        "is_hidden": {
          "title": "Hidden?",
          "type": "boolean"
        },
        "is_verified": {
          "title": "Подтвержден",
          "type": "boolean"
        },
        "dt_verified": {
          "title": "Verified at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "WithdrawalWalletCreate": {
      "required": ["withdrawal_system_id", "withdrawal_system_user_identifier"],
      "type": "object",
      "properties": {
        "withdrawal_system_id": {
          "title": "Withdrawal system id",
          "type": "integer"
        },
        "withdrawal_system_user_identifier": {
          "title": "Withdrawal system user identifier",
          "type": "string",
          "minLength": 1
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "WithdrawalWalletConfirm": {
      "required": ["token"],
      "type": "object",
      "properties": {
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ReferralBalanceWithdraw": {
      "required": ["amount"],
      "type": "object",
      "properties": {
        "amount": {
          "title": "Amount",
          "type": "number"
        },
        "balance": {
          "title": "Balance",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "referral_balance": {
          "title": "Referral balance",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        }
      }
    },
    "WithdrawalTransactionCreate": {
      "required": ["amount", "withdrawal_wallet_id", "withdrawal_system_id", "withdrawal_system_user_identifier"],
      "type": "object",
      "properties": {
        "amount": {
          "title": "Amount",
          "type": "number"
        },
        "withdrawal_wallet_id": {
          "title": "Withdrawal wallet id",
          "type": "integer"
        },
        "withdrawal_system_id": {
          "title": "Withdrawal system id",
          "type": "integer"
        },
        "withdrawal_system_user_identifier": {
          "title": "Withdrawal system user identifier",
          "type": "string",
          "minLength": 1
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "WithdrawalTransactionUpdate": {
      "required": ["amount", "withdrawal_wallet_id", "withdrawal_system_id", "withdrawal_system_user_identifier"],
      "type": "object",
      "properties": {
        "amount": {
          "title": "Amount",
          "type": "number"
        },
        "withdrawal_wallet_id": {
          "title": "Withdrawal wallet id",
          "type": "integer"
        },
        "withdrawal_system_id": {
          "title": "Withdrawal system id",
          "type": "integer"
        },
        "withdrawal_system_user_identifier": {
          "title": "Withdrawal system user identifier",
          "type": "string",
          "minLength": 1
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "AppHWID": {
      "required": ["pairing_code", "hwid"],
      "type": "object",
      "properties": {
        "pairing_code": {
          "title": "Pairing code",
          "type": "string",
          "minLength": 1
        },
        "hwid": {
          "title": "Hwid",
          "type": "string",
          "minLength": 1
        }
      }
    }
  }
}
